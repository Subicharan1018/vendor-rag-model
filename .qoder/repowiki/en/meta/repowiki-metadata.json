{"knowledge_relations":[{"id":67,"source_id":"5f5fc573-12a0-4f32-95a9-0601f24add60","target_id":"7a252a29-1868-43ac-be15-dc8a5ad257fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5f5fc573-12a0-4f32-95a9-0601f24add60 -\u003e 7a252a29-1868-43ac-be15-dc8a5ad257fb","gmt_create":"2025-10-04T20:08:26.1571159+05:30","gmt_modified":"2025-10-04T20:08:26.1571159+05:30"},{"id":68,"source_id":"5f5fc573-12a0-4f32-95a9-0601f24add60","target_id":"d9bc64c6-2224-4a91-b6c6-91944fca1404","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5f5fc573-12a0-4f32-95a9-0601f24add60 -\u003e d9bc64c6-2224-4a91-b6c6-91944fca1404","gmt_create":"2025-10-04T20:08:26.1586525+05:30","gmt_modified":"2025-10-04T20:08:26.1586525+05:30"},{"id":69,"source_id":"5f5fc573-12a0-4f32-95a9-0601f24add60","target_id":"a3a675f0-b63d-4ccc-85ee-8d64170ef868","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5f5fc573-12a0-4f32-95a9-0601f24add60 -\u003e a3a675f0-b63d-4ccc-85ee-8d64170ef868","gmt_create":"2025-10-04T20:08:26.1601854+05:30","gmt_modified":"2025-10-04T20:08:26.1601854+05:30"},{"id":70,"source_id":"8270ecb4-3dfd-4620-96e0-03f8458d7352","target_id":"fcf6a2a9-2437-4103-82ce-4022eeb64e42","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8270ecb4-3dfd-4620-96e0-03f8458d7352 -\u003e fcf6a2a9-2437-4103-82ce-4022eeb64e42","gmt_create":"2025-10-04T20:08:26.1622756+05:30","gmt_modified":"2025-10-04T20:08:26.1622756+05:30"},{"id":71,"source_id":"8270ecb4-3dfd-4620-96e0-03f8458d7352","target_id":"322bbf76-3048-4287-8d8f-98648031dd57","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8270ecb4-3dfd-4620-96e0-03f8458d7352 -\u003e 322bbf76-3048-4287-8d8f-98648031dd57","gmt_create":"2025-10-04T20:08:26.1638189+05:30","gmt_modified":"2025-10-04T20:08:26.1638189+05:30"},{"id":72,"source_id":"8270ecb4-3dfd-4620-96e0-03f8458d7352","target_id":"a7a6622c-ed11-456f-93be-7b4b98e56c43","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8270ecb4-3dfd-4620-96e0-03f8458d7352 -\u003e a7a6622c-ed11-456f-93be-7b4b98e56c43","gmt_create":"2025-10-04T20:08:26.1653625+05:30","gmt_modified":"2025-10-04T20:08:26.1653625+05:30"},{"id":73,"source_id":"5cb294b8-69c3-4ec7-b9ad-a5cf66d42aa7","target_id":"6c61b5f6-46d9-46fb-8288-8829b0288d9d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5cb294b8-69c3-4ec7-b9ad-a5cf66d42aa7 -\u003e 6c61b5f6-46d9-46fb-8288-8829b0288d9d","gmt_create":"2025-10-04T20:08:26.1669003+05:30","gmt_modified":"2025-10-04T20:08:26.1669003+05:30"},{"id":74,"source_id":"5cb294b8-69c3-4ec7-b9ad-a5cf66d42aa7","target_id":"63aa4dbf-6d27-4107-ab3e-c1d86b45284f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5cb294b8-69c3-4ec7-b9ad-a5cf66d42aa7 -\u003e 63aa4dbf-6d27-4107-ab3e-c1d86b45284f","gmt_create":"2025-10-04T20:08:26.168949+05:30","gmt_modified":"2025-10-04T20:08:26.168949+05:30"},{"id":75,"source_id":"6a6d622c-7906-463b-9e1d-94e266f01988","target_id":"cb951a8c-34f9-420f-8fd1-7bb49a2f08af","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a6d622c-7906-463b-9e1d-94e266f01988 -\u003e cb951a8c-34f9-420f-8fd1-7bb49a2f08af","gmt_create":"2025-10-04T20:08:26.1704933+05:30","gmt_modified":"2025-10-04T20:08:26.1704933+05:30"},{"id":76,"source_id":"6a6d622c-7906-463b-9e1d-94e266f01988","target_id":"f49f644f-bbc5-4fbe-a889-2cb41b2ff043","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a6d622c-7906-463b-9e1d-94e266f01988 -\u003e f49f644f-bbc5-4fbe-a889-2cb41b2ff043","gmt_create":"2025-10-04T20:08:26.1730527+05:30","gmt_modified":"2025-10-04T20:08:26.1730527+05:30"},{"id":77,"source_id":"6a6d622c-7906-463b-9e1d-94e266f01988","target_id":"ead4226d-d5e3-4b8b-8787-f124d4994ad4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a6d622c-7906-463b-9e1d-94e266f01988 -\u003e ead4226d-d5e3-4b8b-8787-f124d4994ad4","gmt_create":"2025-10-04T20:08:26.1745969+05:30","gmt_modified":"2025-10-04T20:08:26.1745969+05:30"},{"id":78,"source_id":"6a6d622c-7906-463b-9e1d-94e266f01988","target_id":"423538ad-29aa-4e00-a9fd-8331eddf8f0e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a6d622c-7906-463b-9e1d-94e266f01988 -\u003e 423538ad-29aa-4e00-a9fd-8331eddf8f0e","gmt_create":"2025-10-04T20:08:26.1761735+05:30","gmt_modified":"2025-10-04T20:08:26.1761735+05:30"},{"id":79,"source_id":"6a6d622c-7906-463b-9e1d-94e266f01988","target_id":"a572f9af-265e-466b-9031-049b9ee313ab","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a6d622c-7906-463b-9e1d-94e266f01988 -\u003e a572f9af-265e-466b-9031-049b9ee313ab","gmt_create":"2025-10-04T20:08:26.1782708+05:30","gmt_modified":"2025-10-04T20:08:26.1782708+05:30"}],"wiki_catalogs":[{"id":"57b7ffbb-6728-46cd-b34d-055415ec32e9","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the vendor-rag-model project. Explain its purpose as a RAG-based procurement assistant for construction materials, leveraging IndiaMART vendor data to provide intelligent responses with material estimation capabilities. Describe the high-level architecture including data scraping, vector indexing, semantic retrieval, and LLM-powered response generation. Highlight key features such as project specification extraction, material quantity estimation, and source attribution. Document the integration between components and the overall value proposition for construction project managers. Include a brief explanation of how the system transforms unstructured vendor listings into actionable procurement insights.","progress_status":"completed","dependent_files":"README.md","gmt_create":"2025-10-04T19:59:11.6661207+05:30","gmt_modified":"2025-10-04T20:01:01.849411+05:30","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOALL/yhhKbAEHLZ73kAB5VUxhHmk/mXTZdW6Ow4o1YzaskchY0c3fpx+MVCxHyFJvvsrDWlO01ukCrYzCid8hc6d4alurc/6e392iBlBC0B7fP/pGP7K3FPzcoBX6olTxPzLD0YeRz7Twak4+kDWz5R5+CvXEUZV2aFTiV9PN2ffcOWsz3SBM+JbNJvvMHIEZ0I4zxaKULRG1V1YzRVLJHvSj2HbUkNPlQl4lZDIkCRDKR8fuV06fexuNbUcp6Hl44KYlJ3sx4uiCqVbrH2JqpWk2zWXxOu3LMdjq6q29uCrknQXYwyhqKjvhmhMq9xMbnynoBRyrK8oHCtw0qRYZlIxTtWbHjRWvDMu6Qv87p88Lz7ogF+V8nZtH+fpxNf74RcHNawXiolBrfbQ6TfnnUKRS6J2L7M+nTep4eH0CDP3wcGaYQaXDjVWPXCaa7I51oGOvefOA7e330/iMJlhmrn2RV+4BpXtwMt4VCO5pw31OJBTl3JUZYmAq63SVEuNXmTo5HBL5G2erU2Vg+518R1x/CB4oo/T+2VMhoiQmN3s1ALxQpbiQnQgd+/e6SEbXoCIC2nCBJTJ31sUClZwnvMTAXMeFOn7lx7bigt1bXMU29+eAvAllmwfqPDL1vSVWknhlKftvjvoSnh+x7frk2TnEw/8i3qzOtp93obCOyVFhQ5i+S0Unf6tLPUNsCFZJVJJf3WhUsuRD5cIyolJ7bhH6LcvqIESy8nrnO3S32MlZu3KkMaaJNQ0vmwM1yKvk0bZuvFWrNQ/DRshqrYX5AkfPoYcUdIDSRInibLfzigdZPo5g6zpLJHtqhl/hV2e1Buka+qRIKC+wmtalW6JfCt9iQuTa9EfwWdU7Y8HkQj9XmgBS/uFsGqajUm7UjKjSSJkO6yEIhiFMA2B70G56SWZtc+KunTOzMeWDXpP6/4O6ga/d8UHk6DLY3l8lYBqq/CmcYGfce6JJoswfeRSm5LamW4tHBuEs+nraRFcKTOUjHXTTD33B2kmFq2HIKaB5CoLB1UKwSHPmv25unjo2wacmyPXSHZWYybi4GLdi4tGD5grXJ/dH9jadhCyP7GUzq1VuIyIT2kfDAzTRNgxZPeLQ2m/OFyJ8nrHAbyih7dEU45bxSyoLHefKrz/X+U4P+c3KBmotu4yYvDY+a/ReFCeE/KHWddBzgG/GIcUTsMzVGd9KjNHLnqxYqg4IUPWVA="},{"id":"d62f4541-7767-4e23-9a9f-98a1a144c13d","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Link Scraping","description":"link-scraping","prompt":"Develop detailed content for the link scraping component implemented in link-scrap.py. Thoroughly explain how the script uses Selenium to automate browsing IndiaMART search results, extract product URLs, and store them for downstream processing. Document the implementation of setup_driver() for headless Chrome configuration with anti-detection measures, extract_material_names() for parsing material names from CSV inputs, and search_indiamart() for paginated scraping of product listing pages. Include code examples showing how search queries are constructed, how anchor links are filtered based on URL patterns, and how pagination is handled. Explain the integration between this module and the overall data acquisition pipeline, particularly how the collected links are saved to 'indiamart_anchor_links.csv' for use by details.py. Address common issues such as dynamic content loading, rate limiting, CAPTCHA challenges, and IP blocking, along with mitigation strategies like delays between requests and browser fingerprint spoofing. Provide troubleshooting guidance for common failures like timeout errors or missing elements, and performance optimization tips including headless mode benefits and efficient waiting strategies using WebDriverWait.","parent_id":"4fc71009-251d-4bab-87c1-e39f9428732c","progress_status":"completed","dependent_files":"link-scrap.py","gmt_create":"2025-10-04T19:59:28.2970546+05:30","gmt_modified":"2025-10-04T20:04:41.2050896+05:30","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"63a3698a-aa85-4140-b9ac-59c9ea3b89ff","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Data Flow","description":"data-flow","prompt":"Create comprehensive content for the data flow section focused on the vendor-rag-model system. Explain the end-to-end data flow from initial scraping to final response generation. Detail how raw product data is extracted from IndiaMART via link-scrap.py and details.py, stored in JSON format, processed into chunks, embedded using Sentence Transformers, and indexed in ChromaDB and FAISS. Describe the retrieval process where user queries are transformed into embeddings, searched semantically, filtered by criteria, and used to generate contextual responses via Ollama. Include sequence diagrams illustrating the flow across components. Document error handling during data loading and transformation. Highlight performance considerations such as chunking strategy, embedding efficiency, and query latency optimization.","parent_id":"d9182c30-a943-423d-8f4b-4d25dccd90fb","progress_status":"completed","dependent_files":"seek/rag.py,ingest.py,retriever.py","gmt_create":"2025-10-04T19:59:32.3801285+05:30","gmt_modified":"2025-10-04T20:04:53.9642712+05:30","raw_data":"WikiEncrypted:PGdHQOrMWxh6s6galmzx60G4c66k6IPhWJyX8d8v0xn18NeBVDGxAJnwdUZomNyqXY+T0VjrpBqri0Vv+fAfBKG6ZI4m05SDgyRIJKBpTeFaIAXM8Hs0p4X0xqsNKyQ50POMcReaiKUahG3U0yGMq6pVtW6RtjTQbbXLb387IJnT5rgzbs+V3CWk9qcazf+0Lfwff0++EoAGuqPu5zYhbyHSmFZFU+ume4zuaDqPLvohq6HgZ+093TcIPQ8sdUD8UbHe1EeedW2f+Pq1Arm1Qk3ygmw7lhkjMAMSeGQWOFQpBlESaGBm3KN4QPpB4mABV9Mf0Yy868ahTGYYkR9M8IK9WOyMrwOWCVTBD35LpxD7ybMSnezswFReEtnsD9tjW7PHei2XzYjx56mWB7StnebjD5hc4KLtE7zGkqUw9aRQZU9OWNTxPyt+vx+lsTXnt3Y/wp20fzbdxejA6wQHYmqrrTlqbbtK4RXLJroeOal6XdmDy3uDZx3ImOL4ADluubqYK7k6+PrVreXPKz9cYJ7PQ8VXnorDPFjjHvBA7HL272oU/q9jOwQg5kNp5DzXeNccMEbvCtbiRhWMMf0mLXckrcRjyd0WNLlVdol5MVnb27z8AugIwYB/hSJDZMYJK3Ka9cvuk1ieAkIQbiTQzPJityhNrSUGtI7pF7BURTTKuAGi93OaGs/tGjDdjWm01OcdoqH6k5flOSvT6la7p2VVZ1R1skeRN5NkB2Mi3Zeq0G+Rp+/TSEeveKUtsyegPVztm2W0GxSBcECNO4CkWnoUh2gF0wEktolkZEsvxk4nZN9LqcW5XZvWcjZ0aRwpzNUnTsKNNHWC0Dzohu7I3rP6sv1jlo0m7jy3dBsm2PvhePhAng2/g2x17YBUTpoZ6TJ53jzQDG/+VRv9R0O9sKmL1g4gtflHUmmMvfqiNq2+hmiMGgavLs9NThPct/t4OSuSck0FEv1suEToVlDWDaOdQyQ1Jeu7ien3ek9iuVuyqCPCOaURpbyGkYcIPfrO+Dpk0RTOZSRpVOLLWm+9zkTnYzkvTeoX8AYJFPRUtABodTkQY+CpvHKZQVUfUvtubheA0++GOM8tT1hl22frPcXU3JKuQXrJEqZLhkeqwlvIIRSthG3XJ/eiUJRU5Y3uxmL3576iW7KchShuxGkrZtGspjNqRf/HJC4amS93QElEpVFICLi/Ei4gqAKJlj3PkcoLwDPfMLkCw5EpabDZGreLWmucNOlFTpUOrzhAgDktAnF2aguKlkB7Guqh9a0+3FLqfvUB5NSRwMNsvXP+66bsuKObb2A56VcCLuUw25W9eGDXFYM5qwxhLR3LVTZa7ykDdvmChwULrD8D0IE4kJ9wXpHW0engkvSZEIzdhJT/k9/MuGM4uZ15gINwBJ7mBFUGINCDdsU7UPIsbdIiwibl8legzvpzeLE5X7ahsv0=","layer_level":1},{"id":"6ba61f72-2e5a-4411-82fa-6dadaa88e00d","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Embedding Generation","description":"embedding-generation","prompt":"Develop detailed content for the embedding generation process used in the RAG system. Explain how the Sentence Transformers model 'all-MiniLM-L6-v2' is utilized to convert product and vendor text data into dense vector representations. Document the text preprocessing steps including field concatenation (title, description, details, seller_info, company_info, reviews), handling of structured JSON data, and text cleaning procedures. Describe the role of the AutoTokenizer in chunking long texts into manageable segments (max_tokens=400) with overlap to preserve context. Include implementation specifics from ingest.py and seek/rag.py, highlighting differences in approach between ChromaDB and FAISS pipelines. Provide code examples showing how embeddings are generated both during ingestion (batch) and at query time (single query). Address performance considerations such as GPU acceleration, batching strategies, and memory usage. Explain the importance of consistent preprocessing between indexing and querying phases to ensure retrieval accuracy.","parent_id":"aeec3718-6786-4d99-95ff-9e4fe0675184","progress_status":"completed","dependent_files":"ingest.py,seek/rag.py","gmt_create":"2025-10-04T19:59:33.2848964+05:30","gmt_modified":"2025-10-04T20:05:13.0426033+05:30","raw_data":"WikiEncrypted:mlnMCj+10fwfWTIeGKTzgrLBAgW75lnesXfwP+trInGXzmXMs2tVklY+ecvvZRcElYxifc5X5LadxSrYJ0ukOYyWgJ7gFLrTv0KQFMo1AAGs6oN0Vv5B3ysvg9ndXVO5WPRCQdrLOtB0JpraGnJSkxF1fpg4SFhhodVLv81Ix90kEHQerhWYTTiBnbxiIOM/7HXSVrmmeu8Nc0KK2MLVM6MtepRrDAgLmUBqkxoDTPt0eNJNdfFmIx0nLfDkdwNoND2aqq3+wUhkXFL2E9VrwAW1wMoNFKQUltF5CZZ9/S8QwBZ/eQhc8iYURJIo6kJ0D6WGzGDglqwGV5NDEW4zIG2g08Z5kWWsO8K3DJz/wr4WFtPnkzJ6yV7Ggetbj3rLHNAaKhtrRvxaHC37gb60lrQTcKLRrq03qjErNH+eUULT53tEvbowNDYfOU4+lxqKyo7R6kK0WYJz2+Q4Vu1h1LxLgNDses1E4ZGUeqdQLpX4y/XSHeHwhDTr8AO1JMrN7Bn0ql1F9dEoQiXbDcuPQWqhF5ZEdWwJIC2IRXq8WE+Twth5hX2oo/mwMKH1fOj/7qH8hh4+QHjm4e0rSIdzu/HIYKqzDqAo++nZBjnb2XTbdiZYTmuHpLQc4/ed66UzV7PD0EBYFZblWXxCrwA+3pK2+r6Rd5b60yIn+9o0JUsXwWmsjKLXrytkQ+BYSLXdzcZg5OWEULIGoqP0JYWUd06OFjZ+Ne79vpVIFBoFdrn+3Fk+vCH2RjIaEsp/HmwcKJrfC0/0koMxwWJt7ZEdw2K6ECrUCInBw5CF2Pi4Tl/LzXKFvVTpsPw67McpfCu1Mdz9QlfKGtCfsFNxnKFe4KYHgWWQ4ErFlRIrLkLLiXqQlND+LzRsbtcWz1tXPZ3cY7kVSP+GseW49rKRi26Yw1cQ8VB8AhRXl7l8dlCrH0XAvHvFUUX/4FTps71Us88t6Uj+nwZlIb9HY5tBOmQN3cGDRAjtb30+p9BIZ7lnOjicMtVSTQrCy57pcbGVBl/2NQI1jNe82mW833mw9947nozLPxFwSqR4aFcdY1uxwpWD2QfGfAnbYLBgj4UtGQyKnlg7yDYCpDG2L4kimVZ3G0zoIWu99pu0YKoc9QjKSL66jKOFU/+L0OynOjcAOaXWezdywot7un/B5YDzI2IpeYVVW3db9SbqXQBDJUd4TdQT0V42SLD2H9SQ5XitlzE5w6nalknOZ6bBx5p3GyGcpROjQFHuTqR45fUoMm2Snm10uVCLFLwrceMWWQVOOPQi2dc4zuyC3Mi3GtWN7w5vjJsHLST6W16X/8TDuET+WWef/pkwDg4pWM66ejniBVlbcF1yn6HnCeDBWdRuXNRpOAwQXAzNxMfRNXVyYyFBjejILra03zjKf3uhWDDJ5qAgSudF4s2YjV2DDimeaaMy/FkCmPREYZsR+9jfbPHogphf57qoRO+b5AVcQlJqqSenf1eZ3z8bABEk0tiiEclIMTQSe/zZ9L6D0px+DDi7/2wdQouVO2RSi+QIEF43jUYLo2+mUEXaGW4nlUSeS3e/Q68PCPXU6lwZMHsBsmjRR3iI2p2yS1pZkoJeVtDfO20lPXeUr+TpGUR/WxVYAeMElLKjBaQyR02HuZ3hi0BoYjSyQ60+qwx0gJfypvoCaiORIEnz6jhQG20RRLa7Vy3c6svt2BMo7pCBCAkLKNlZYiQFoxTwRo+Yl2EFIy08e/PqgFXddiEAAC5fSQkT2WUYpEMabG645cuKyGvE725CO9U=","layer_level":1},{"id":"169b32e4-0cca-40ae-953c-498c587d0f62","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Query Processing","description":"query-processing","prompt":"Develop detailed content for the query processing component of the RAG Core Engine. Explain how the `query` method in the `IndiaMART_RAG` class serves as the central orchestrator for handling user queries. Document the step-by-step workflow: parsing input, extracting project requirements, executing semantic search via FAISS, applying dynamic filters based on query context, and preparing results for response generation. Include practical examples from the codebase showing how different types of queries (e.g., product search, vendor lookup, specification-based filtering) are processed. Detail the integration points with other components such as `search`, `filter_by_criteria`, and `extract_project_requirements`. Address common issues like handling empty results, malformed queries, and performance bottlenecks during retrieval. Provide optimization tips for tuning `k` values and managing response latency.","parent_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:53.6613983+05:30","gmt_modified":"2025-10-04T20:05:27.446655+05:30","raw_data":"WikiEncrypted:l9Ho0Yh0r5bYH9QEePEhkaTMuq333UawhV35jP2SksvuFIz922lohxO4V9eSYS/msbuTK/wKbj/qWttwZSfsePBnPlb4zE3XgGS0zXngNSV0vTJvnvJoHKU1dz9qDwaeaYmGRln7joa6h09bzw6U807BQBrEkjkpIiFUTHWOqMJeMUOewgKB/BinJxqE1gLeUvHZxSzyCOU6oVXGSjgXHYrP7q6YrpQdUvRd6hbhIOa0I9nreIEj+Tdq2515yYHMVXo4NLMGKGaWMdTQmJ1cr+YUy6ReztpiqSuuGJ+gqi0uQuPGY4Ye7yvdrbw4Mb6wS+aeiBYb7Un/DG3hQdhw0qyT0fuMXdiqsY4cgI3KUAsyTjAW5tvxYlEqgL4vQ/piSR5Gwkmqwqk0/iYpVa2F5HgzO4Z+6frc/xP31V1Fvff2NqN+ocxxzG9wap9nz1cqo/U1m/TcIJqRLmCp9Hm9J8u69ZvsFsIu8/Inhjkp7gohcEGEVk1cMO2clE2VoQYxO4tNDC3LJdvg3eTtrQ29ijp45uMMB4MhjgEvkOi3/zUMEhvNEGdq5TkcFNYLLz++cMvUUQAj49rxPmerK7jPfdO30iLrmeKbxE1aGZKoxu1rr3sSaNME81PI9AeI7uS9lXjhAzs9ByJoF7eYjzcMAkgFTcDMYfJOLf/nC0Xca9qS89ZbqFIA+Ee+XHRMm2u8to9QKIHHTLaPjLWYCFKsofr6lhUafjtsFajvX2F+Exuog4Rffa1epAPjl7gqOb0ZDuj8c18tTQuRzIsl/LGX3JxcdX70euJaAzAjLvpadPvQlC9u+1GtvQ/iciNKMTEVKLIeM9bOswkC9lMLr3eE20+As34uYAsJ12Fof0KV2/Iv3W3z08EbvyqtsfUydMT0wDH0xi+q4mj1HMAdS7in/90kECFWtPPsDgXkZkxza2IttNe0EXG4QpmmN2Ubq22k1MwC7MpTZkDHvXmvcAOAv2AR0ttdH9hCpfQ7ipBptWcc6VzuMoC6GQR8hij6jlfjBV11jewAjieNupaxWAHvvSppZBH5PVB6wXcpIDedFC4C+wEP//TpH4SQcaTsxyV5i0KUDBtwTJEyaVXb/jr/aNqM1nKdL7vG1iLXZAQieZokWfcgISh2QSU/y/LTCzOBOXzxJ1DnneRuBP/v1BviDAXBUmI/sCmw/ccqTBso9o/UVOg1+MKwshJysOGZQSVZn8Zu7xBMKv7W7PrXjPQnPvib1Oc1YWcfk6Xworep7GV024WRhXoN5IRuQIM/7tLMyetNtfCzFv8b/YKgtHJEhcZzxwA4c8dw0q4MRS09wogb5lk05kEn5O7A95XnHpCn8cXg3EfpJEgLkpbU9bn2tdlUbDL61aztK6Jt2xDiFxguI7Sz2lB7IsqNx3RdCBVyPaq6SWy5xy3k6AFtdXQUG/tVe/kJa9j7DLEV1CPmgBacSZUrtH303OMvFjbfxWp2RVBZBkmtbPlBQoZ97x8PobMM7AMUifpzmnolcLY8/1oATosonp69QWIKUwLLXpiQvDJpFtoa876HewCFumyQAQ==","layer_level":1},{"id":"71313e4f-dcd4-4593-b5c3-1ffdf54517f3","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Technology Stack \u0026 Dependencies","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technology stack used in the vendor-rag-model. Detail the core frameworks including LangChain for RAG orchestration, Streamlit for the web interface, ChromaDB and FAISS for vector storage, Ollama for local LLM inference, and Selenium/BeautifulSoup for web scraping. Explain the role of supporting libraries such as Pandas for data manipulation, Sentence Transformers for embeddings, and Python-dotenv for configuration. Provide version compatibility notes, installation instructions, and rationale for technology choices. Include guidance on setting up the Python environment and managing dependencies effectively.","order":1,"progress_status":"completed","dependent_files":"requirements.txt","gmt_create":"2025-10-04T19:59:11.6676621+05:30","gmt_modified":"2025-10-04T20:00:50.3905302+05:30","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZY0/59wSk5TSFXlSmTJZmrpXVgL8t85CsMGODU6uqFrTRTm6MY+e/+CYcRTarMW1Izan329jrOxBmgoneFIeSP8Z8x5vZ8P+NHe35QUdvWYx0TYSi1pHbLaNZZTZjofrlapVNlTReCCCDrxIuMlK/FAfkgSoHg/kj+ha8DE7/USOxfvilUvSo9bLHArhdcqqV7KrhugtWxURt0dV9Lt0EznVjvn2lc6A6gfjceMx6K/hBrWADuxISm2n3twuaxrjPpuOHXUyaojemU7Qwvsop5yEATXnOuaNDo/f5gmWIzxvPCsd+Fo3stxsPq2KIcAmjDzgQ90vwA0oL/KbQVCjFzkuvtH6bEp/BE6owuaez1AqIuegloUgqmFxmXjmCZPv2HWXZVWK9mCyp8vwKD7HnH70BcR7C4tbjS9aJ6LEER8RdepvKc63Dl7YAmSTodrNb89oyGBKqpN1Zw79upAEQfwFCnqK4GCwJk06xHU5lWzbrPJnsuY2QmlvgZOyWHYtLcrde1YC7Bq9X1NY19YGigLgvynaGFh04gTQHZkNI3XSWBdfRJbAM5rox5XUdO2OveM2liA8iu9zzB6a2Fr1oVwRpbrrsGYD5qFTmRpai162k8XDMoCWvI+45Ra1DFSyV+hr5HflZzwLVfjd+halMoldFBNebtVtMyJ9RSM4Or3xry1mFWQ3wzUTnsaNR61Vky2gZBB97BV2mtm4soHIoXB8SiNXRgOz6kkkcoo3xkHJ/5oK/AyXRfseGRV7AiqZHcfX2OwxNZLo8s/Ma/7mDqzT59zlcJRo2/s4XzjApdddbUeaEphEWHzNdQ8CYMdxy9vzIN7TNpJSAeusF/AbZmobs8f61hS4ApAfXfiCR9Ucj3BqHRNuVM6XHIUzZy9ToQ84dF4yiJkw9dItsihNTnfkuLnf1V6ojH5Xe5ngCL0w5wa1Sc3BxuRWMPRIBkJjxS4EET9qrGpDuEPDGkfC7HoYwhOZydgj6MdxiEIF1BPcupcD9uttbsQQ4sZhgJ03s5wJgb4cZMzBGCqwTDdRL5LC6GZKAdGKoF1Lyipaw90z69bMpRwMObjPQkA+/nMICjLcoU7jnVBaPr2TeGL9W8UtAXHxuZzru/iGJ77L0jBTNydo9S5+W9aSq9h+2nU1b1aJ40wH1MrY0Y2ibMakPJ6H9qplN5JL9QHY1/pZAHbFHz97i9xuRQ0NU9ZtU3/Kjqp4K+aSs9TL5DpRe2EUYwg=="},{"id":"233d1d4a-666c-4450-9f0a-8856e5778dd0","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Details Scraping","description":"details-scraping","prompt":"Develop detailed content for the details scraping component implemented in details.py. Thoroughly explain how the script processes the 'indiamart_anchor_links.csv' file to visit individual product pages on IndiaMART and extract structured information using Selenium. Document the implementation of data extraction for key sections including product pricing, specification tables, descriptions, seller information (from cmpbox and rdsp elements), company details (from About the Company section), and customer reviews (ratings, distribution, and individual reviews). Include code examples showing how WebDriverWait and CSS/XPath selectors are used to reliably extract data, how nested structures like seller_info and company_info are populated, and how error handling is implemented for missing elements. Explain the data normalization process that transforms raw HTML content into a consistent JSON schema stored in 'all_products.json'. Describe the relationship between this module and downstream components like ingest.py, emphasizing how structured product data enables vector indexing and retrieval. Address common issues such as dynamic content loading, inconsistent HTML structures across vendors, and session timeouts, along with solutions like robust exception handling and explicit waits. Provide troubleshooting guidance for debugging failed extractions and performance considerations for managing browser resource usage during large-scale scraping operations.","parent_id":"4fc71009-251d-4bab-87c1-e39f9428732c","order":1,"progress_status":"completed","dependent_files":"details.py","gmt_create":"2025-10-04T19:59:28.2986143+05:30","gmt_modified":"2025-10-04T20:06:19.8277756+05:30","raw_data":"WikiEncrypted:S+lrqVSHKb41o1tm3k5FS0OjaYZSItylpu+Sq9oWZCRyxTKIVU4lsYm1AY9j3g8bVIbNJZCx73Zs2SXyE5zND63/JnkxpSH2Dda7YDGMfLbFUPJCGWG6YI7q7xSjN+Lf43yIRkBayxL8guNzA14f/UWRmrV3PLnndf2xApVokZ7rJy+SK3zSBkcmatzBddZKmcYhWgCVocrJqjUj5M6OxCDbFzIxWKkfyrb5YFA71eCLJqyCIma6+mqv9i25ok2ny7Mhuq7Bl1qPtwv89nD9wH2jkoi2N+p/Q5illJ3zTr6CpX83A/icnAShO6hOsA8ObwezlffEbDcUqqKRzHfqGNVUQisKfOlBOt6yz16FCfIPfUqk2XnV0pFykk7j1sicvwsaIf98BYXYILgZgy8u/dES/VDDEY5P8v4cm2UcdacpDKx73AI5Gv+M8U6KlDzbGlTGOZQkQDHd5hw1/S3A5E7VVhj3zTYbyt8VU+ebbAjAVLLlm05jL05yN+Plf9/sOVgR3iNoQr/VaQPPEw7ofPV4DLpWrnBl+CCs7Lk0TQin9mEziX0l3jWlKlcbU4GI5CqaYIXhwwIoiTi3dlqaBVlVGaNT1r6MIXl5awMuNww0qAYh6MPYFKEJGBclCtdhr7lFeS8JLLyVLt84jKfeglv4kLh0fxsT0uFfpROFQO/078dxjuQFhmS4YLh7oaAWltsiNXw7y/J60dAbVQE7Dl9JICoAEe8QkNHvygOIYQjyKQcJtve7QdpeAH36xbyOsb0AG2ypp/BQKiQk5TsneURoCswRKrjUKPY0GNDBddvjM20nvNSfMVGyJOEhZZkMzj4xx+g+toO8thIdrq4dkJp40+KNQzOl/PFM1+CCV1mREYMAdlkHW0jDd7mFbmb0mjGlCwFC8z8LZbL3C2p0XHNRH6QDI6z7lhV4vESRarK3pquFhuxgaioCfXbGot9GkAkXr4FHXtOyGCPLAWZI7f5FF4i+zMmDfYN0CKup4+ygN/d4p82RAW3RfDkSzlbvQnO+mvGLyTS3thL31s03UnQ4uzp2aiaMaP7sq67/bJXPIea0mEZcyweTB3mKEz5sAA8WOtj2/ur7FAP3/z1iDE1vp4nSgcSG4yS+QkEp61yAiAvEf+su6YO9VSPWE5yCXeuxFCOo3XaCYe8ulFX4txkJ+HlnQJU0v0FhiASWY3sonsvbUOnc9oHWJ3tUKvUUb7DMDOdlX8XQMn1hH5LOPFz9rlWGPUTLGpINcVOUYD9ho/gRds7xbznqerphyHjpJwW+DV9HFMEubUaY8WamP7kYRpd+ARgNfWB5h7tLh9LjtYw8To/YqaKckUaxLmh7bftfK1uDjz5hnjCgI1izjApec0NSDYEZrvEfvcnfgtLnJ1+oLf8yMsT/hAUKSKxYTgiBHxY3w76CHuLJwzmI4uDPcnbi/NQlxr8ftJilajFpeV6morHSv+4cFuTEzYUYPpyVIiaLNg55tt9GhhsTPXoEOwHiKT1kXrC+vuWYAOi+mhfg+/uTIByq65qK/pNPtuacwmYckZ17nLrAkdmoEnhW4UaBmbYEPbr+a9HkOBDYfgZVk9E1swgXGJq29xluYYvuhX/+QyHag6/aj54ViaFvgja3v3pMHokfsXdOPsHsAI2wG8tGSw9IHhISiOiRtHbkxi1rx+Ke+QzhqkHiBfavAvLP7UWyOnvRdXLU4qM5BRHejQAhL1Mw/ggRSzKyoh8VKzh28+Ndl+ox8MPyjWckT+MOCAd5y6rZ3D2SpRWR4dRAxkoGhQShgV5qk/mmEbHiUSo5DFaJzMDDUSP+hElpN/wHwCN2XrPUNu+vQhlRLs9msZ4XyhB9qCOggKrAY65CVn5f/BHklDI3vHjTjF52wOdyEiDcj0+MCuzQWdDmxOrWdboj7O/y/OnHQ3T8hkJ5STtMmBz1QVfdGGV3T5rsj42CAqX2PqKDiI6sd2U/H9DQFLzRClnc29/MIH+ARPGBahoxwzt+lgH8H9HZ7z5vA1C0sobhPvg6F3hl1u0GuMGo7c0nxm4b9y8hJoW95UZD4KPForv0dHpdkNqIePznJdmjsGO8QMmD9J/g5DATfNrVaf3dfQlpEjn1orE5V4USWz5FxhvnaaIlW0b+pJheQusSs0F49q6yjAdgVrYf0V2Jl0RzOa3jaECFXgk1xoqXV8FsFAoAstdbKqgsr1rmFEnqvm5BRxJowuyPf0rNrzyuy4/HX///Qvz5vhug5MXeDQZ9PnA+G9sjVYVvbk5iCt1m7N0cQJaTfymL+TO8K1iPisSjJSLdws+xQ/Yx","layer_level":1},{"id":"170d58dc-c99e-4ac1-9ce3-4c9d6259f675","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Component Interactions","description":"component-interactions","prompt":"Develop detailed content for the component interactions section focused on the vendor-rag-model system. Thoroughly explain how the IndiaMART_RAG class orchestrates interactions between data loading, indexing, retrieval, filtering, and response generation components. Describe the invocation relationships between methods such as load_and_process_json_files, build_faiss_index, search, filter_by_criteria, and generate_response. Illustrate domain models including Document, Metadata, and Query Result structures. Provide concrete examples from the codebase showing how search results are filtered based on location, GST date, ratings, and availability. Explain how project requirements are parsed from natural language queries and used to trigger material estimation. Address common integration issues like embedding mismatches, index persistence, and metadata consistency across ChromaDB and FAISS.","parent_id":"d9182c30-a943-423d-8f4b-4d25dccd90fb","order":1,"progress_status":"completed","dependent_files":"seek/rag.py,ingest.py,retriever.py","gmt_create":"2025-10-04T19:59:32.3822708+05:30","gmt_modified":"2025-10-04T20:06:05.6813129+05:30","raw_data":"WikiEncrypted:4Zqjl5aZEo1Vv5NKBpebTomBBVqvudgIjJFKRAI2hgGtv5I3OWs+Ol4REFvM8yb5LW+VxB01cHc45yQ7uyXmy+r+Vgdy9R9ROKz8gXfwAuxnvqaIBFiaffTYHb+JZ0z40p0AfI5sQ5g+d/HW94GfjByHteTjb+Oj3+K4xFTkWqZF3JdRf5/3GhLXX/qJeLDUYGtVrGx6D+zVqL9KGIUJXFOPXi9WGMaG3VmqVBQdLWr7ZnUMGWFov+jY1/S7O0Rqcgp0baucHNv6nQn32biFKRk096POQSmkvD0fVU7ytvO472O0cwdno4Ynsptp+gDyauf2iX1wkf1/8cWOcroWeRcABV8fZeO+n/7cUGCWTrZP0Rgz7empx+LxKSQDNL+lAjYUD65dU9BYKTDzqk8TEx7SbHYBhkL0Rpic+W23IxBOkt/3tljmodqoK9U8eT9TK7hPYobM/clhhE+GihXQZzST+XznMnlfTXwS0OpwfHXkZP8Y+55GU+Gt3g8YUwgTx+eu4ieqAle84aq7AST+5DLDfpGcu/0k3DuARgPh0M5wiOZz/8Niv9NPXotp+WXWZEQfBC8U7fzGD49ALuGaHmnL/fg5oawgj8y1XXbact4pMGnZyZ00TCDBih0MAmjUwwrigjYJ8Ds3sy7iLEDU/rytBk9AMn7BOzsD4ee3iSdSgLWEXDHsrKWYjDWyJj3qjdhl5IAhCjHsF5iVvJPazU4Z69JXrumqLvv5Wzb29fbNjhGA9O9dEvKOtuDYwhTboHDU2GL7EiMwP2LpcmPUp9lGHiLTIq//4gqe0jB+VgKl7Zi9TpNA7TgAbbKOOHvaXK+DYcIYBc0q+eFhTffuj0X4UiYBmyd//NKATcIVRo5QINT7qm5Ht62wB+yl7WxrKvp4GKdjcbmYgESUP6MF13Ut5DQ4jdqABx8Kgu/1yHH0AjFlMkaFVHDbdcfQ/WmOPa148nM0S3nu+nWK45e7xUyKIdUIQ2ufGaZrikoVi15sIuiNBAhPpY48hKxu9SRWK7v8bNw0YbzELspXZEqtjhZbdh3gU6zbziKAZiCQENUOgS3YoqDW+pFe/OsiuPgzGW5m+69YjM0D5P2s8iy1x7AuURMSNmuRBqJov/NBMzsjrw/UMlwo3c9CqLbX5xRBo3YaBM4zRN4RcEQL+HYzwQCEPBWEeRpc+MkmdPFzlpJ1quJupZVUn+DytypIDoVuV6ctIi4YSfQa+FGa8ebiuU2pa/JaIFhTEOrLGXlVJ0e8Zt0BL0k6vIwRWhV71WUWcL7YjAH1lc4mm7997ibBFPFFib44wrK4hkDggyHcmUeZI/DsoLQrr1g69TWfYeGjinmZHY7gOpWUWaKyBh2vgdfmCBx3xBbNtzqXurrNcA4J7uQH53av5uiscEvEfxJcrUoTU+T+lL34RBOXHahQB+wjM4wYq/RK0FdhfyCLIm4uiGZ6LV0KrRvnPvWigGocxoO+0DSOcHyJBao0fqSlII/gba3FV/LfFFfgoIz564WieDF3h0ypWMEN5pDzpNlXMxFqdn+ejb9+ImWFmKDMCZx6gjwrS8eitNazHjNF1iE=","layer_level":1},{"id":"12e16eeb-2094-42b4-9c4a-aea5465f954b","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"ChromaDB Integration","description":"chromadb-integration","prompt":"Create comprehensive data model and integration documentation for ChromaDB as the persistent vector database in this RAG system. Detail the setup of ChromaDB with PersistentClient storing data in './chroma_db' directory, and the creation of a collection named 'products'. Document the schema design including how documents, embeddings, metadata, and IDs are stored and managed. Explain the ingestion workflow in ingest.py where JSON files are processed, text is chunked, and each chunk is assigned a unique ID following the pattern '{filename}_{item_idx}_{chunk_idx}'. Describe the metadata structure containing title, url, and category used for filtering. Cover the retrieval mechanism in retriever.py that queries the database using cosine similarity with configurable top_k results. Include practical examples of querying, error handling for empty results, and performance tips such as batch operations and index persistence. Address configuration options, storage requirements, and best practices for maintaining database integrity during updates.","parent_id":"aeec3718-6786-4d99-95ff-9e4fe0675184","order":1,"progress_status":"completed","dependent_files":"ingest.py,retriever.py","gmt_create":"2025-10-04T19:59:33.2864779+05:30","gmt_modified":"2025-10-04T20:06:28.9454037+05:30","raw_data":"WikiEncrypted:s6nhJZ27tGiwki5wp0IvivJVzXkXudUSQBCoANoSEBobI6NdyNJNc46pv34oF7IkTKuCoXRNWDO5uqJZ+KM77PdujTrEg6FhquEw+Qj6vrr4r4X3K5ZZPyklMOgwTpS+hP7e4S3hLbXJdFCD+JEokpRz/iohKeC69Llf2fiQSOP7zzMle5/btQBWk5K38zIGJkNqkQT1up17xzB+aMA8VNEYxyw3PKwTEQotJSXVfSi0LN09myAxVYlvBmV5ruC5V9hgV/H34AazwQXs5EIeU8QJL3UoefB/AxpWxlWVOeJb0IWtFtCMPXOazL3NR40ZuPD66YSmi9xcXnqr0XhrKG5qr/h1N8JEYh8xPMEp0c8zTsApToxc3N+VNGUdqBd0yAdcAQzLdBXxUtXbzSYuSSNa4z+JB9sLKAiUymgUtucrsf1BAKtAx/gaNfThDQriMYsqFrO2Yhw7vV4OEsFUjVT+cT7QIBv183zRS/AnWMtXaoBQk+QJZRLKurlmP+mJj3Mu59+mIxHRRWfDtNAkx6BFBvPKr7JTEgnLRZ1/v448b26WYRm8pNkas/fZe0hwXdyLy9zqcYeXC80sXtVrLeo97mlmO8mfZq2llGcdyiRpj1pM2tnLQoiRBq30wDuucu8VJ/Y/sSwfcan5w4C8DKoCwrXy8oIxMkh7FeXZOLESO0Z63YMl82LudfN2aEHh8m1HsOiMzbPNsUK5Wm6sFc4B8SwqI/dF/y5Iw0SK36SM8/KYxv1LQtvGtx1tvs2eytbM+/6QPnQAw60TtB2AT8kCgXagNIBBt9Phns34Ci3GfurPqG8rd00l9o4Pk0W+Dl48DDesF9lxIDBBWzFdYUzzCqQwMBaeF6QFq+kzLT2Yw3JI0cHI14RwN2u8hI7cPTCBf/fkv6t5jcFJggtVoZ0iwZvE/4zATh0t0qYHUXAP46ETS3XU/2HESvv1Rfs4aoR8h9p4tMXUGRHTujcInNMp3dlHmAgWudhomEzk1CY2JPhcbqOPcq+oXGjiHOBfCTg2EQl1C4j9NLNUOwJ95puBgTmltmgzggulNkg1hsuM4GwTfY1/7uvSToNh4Q6Kye46cTuMxQ77/RAMsrenCdSTohum33hINbMqd0Wrj672OgaeNboPX/Y4qPrM5J23sDLE/4PTnQqXAQg6P6TlUc/9fhnjdZdTjoN1YjdtrdELNEzTynQM0sutI3DwRQ+Q9E4yVJ6zQEQ+FVCW8gbVIKl0bcH9M6TG5ocjvHHmnFQVjS56vEyE3p1A8uKOI4QsJUrXpdlfibCSiyIdeFoXZH96wnpjacMYtjSeyUpRmsijhVHuZetqM/Gd6awGgkpBWij2g9cYzZkmCaISC+huy+fQEoW7r/cljfX7hg6I3GNlyJbUF2bp/dxMZpMT4pKGjSGWROMjBeg07+zXYCJ2F9yrs7OjPhUHE2jUeN8C1donRr9lERzxE47lozOLQDHDSr7CYd67PNCyb8ZYYGbnXtMZucOS5FCFE8RgRcs8YpVphQIGN+RcBxp6nuU6dms4rcdroc6f43wnK6btcjGHPtOwo4PUmrfuPdQDUOhQP3igBokOKnPrQxZjPD3E/fnqR+SR7T9W+34fX61agjUMAnI/iQCz+asngW/ItmKtKBu7mBrywnOFMhpQbwo4/YitsqD6Z0B35Af40lYz2VfMmkw+DYzoiqoeS2vVgPcIw48uUxqRcezfcINSub/6euB45e9z4jI6tZseZOC8TfSAT4ATaFSgg1DMzlL9eK1bwJA=","layer_level":1},{"id":"313c6b55-53a6-453a-b213-9b4d170d3af5","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Context Extraction","description":"context-extraction","prompt":"Develop detailed content for the context extraction functionality within the RAG Core Engine. Focus on the `load_and_process_json_files` and `_process_item` methods that transform raw JSON product data into searchable text embeddings. Explain how structured fields (title, details, seller_info, company_info) are combined into coherent document representations suitable for semantic search. Document the text preprocessing logic, including handling of empty values, concatenation strategies, and metadata preservation. Use concrete examples from the codebase to illustrate how product attributes are extracted and formatted. Discuss the impact of text representation quality on retrieval accuracy and relevance. Address potential issues such as information loss during processing, handling of nested JSON structures, and scalability concerns when processing large JSON files. Provide best practices for maintaining consistency in document formatting across diverse product categories.","parent_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","order":1,"progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:53.6634783+05:30","gmt_modified":"2025-10-04T20:07:08.3280263+05:30","raw_data":"WikiEncrypted:qiOE1k1TA+YNTXi1/8EeGhCLNguxY/hNVXgVMjo0ukGhG7VK49YVOU0+T6P0R4wY37leVkvuiuL75m6BmVsCydHzLFYhjwoTMShDIyYJx4cikCmVVCTvj99N4D9MmajgOJc5Bk1oJFeXUKOqZZaj3t8xLCNzPVGndEHKaj5RS+sJiOybljxAM40XFWBJ4Ag4WDnlGYWAdDs2rddNhex7bZ4CHmkYI2oSiUi2vlHEPeyLMuudbj3e6OnCvdM/Z2delDCVLrjIrtKDPyPxX/qZl/aIYmu3IhldKMyfS1FNu82j8I+kuPOGXCAhXFIKEO0seo1knItz7LaV+KcH5KQ/jWntMozMa0pzuR7+Iuotz7596i8XP+fAoQmJpon199C2kVKYiqqO7Azf3/gjbK1AcMi+KXUr40QfLgC3IO4+LnohIfpQrjMX4bVGCoe7D8cW6alHTdUqwPjOff9UYsW67h3Typj1Vl4l3+6rSOFHR+UT3MQ08SpSwGyLVM8a8HImyMjCSQtCfXbcHhVpmqqeYHl8VgxEvXSla+ySA+O/VHxargHH1eoIZ6h98a9fVy0/M48kAue+mO51nQbihMetCpxlFUVGECUmUMfFUvjJBAv4WescJ5tPvA5wrqj7rkZWUmpMTQgujXcecIKoAVmpnanTD+lpk7Wprrs+MovIuv3fQV2AR1rVbbWOQDhQpWBagKwlRaZML9TPQiniJZCnK73GGeaHi/HD4fLuCPGys4lkkMrGqPb1NMAywwkAgghUB8Bc+Xi9S77o3AtiElmqlE41TgEB/t1eliBGPRGco4z5cL5EOqbQl5rXh1qlU3ej7zVcXfW61Trt6zySFdjyeSY0CtJ1GFiZut6p2ykGfHStGzVhs9W25xd3TRBFb8KwDVXa1VRiBwaijW3yxtm99DjCgHcJlXRK5Bg0XjUc/K+bB02SNfBbs+PWCGR73kaZa9aAPS4dMu8eaEq817BhRbBOIKdb/9mUIcIVtJvrebzKGxreUgU4XTRvvxrenDAM5XWppCeg6OicC9r3RewCFvAQ+UnpxkS5usw7IFb5vNVmGtSEfeq7SvtpZf6BC22DD8rSCrpeRmkFUI0OUjV0RoeiFUFr27t1lxRiFCXvRoECuV/TKakO5U2MekXQdaW3Oih2+gLFy/2lmNe+4S8dR/OBJ6eiKPwS7XJiuayMB9avZy8aj0YzT5RiM50h1pGasAj2nRq7HW3LtmIyd+XUxew4dTo/q5fsoLfTruOD1R68OBMF+csFcWAM/0OYRWNtgViTAXW3syVQa2fvmUc7jYLNMqJKYNVVtLnIrYqB4G1cHVlvUasjZsuXT8GMYXdgb9S8wxiSABUKvSrHZ47UWaCOVkacEq4JxAfBuKNY4uBlmPUmZeyj4R3OAiE/f6+U7xNzU+sJTNXkZ14gGM8GAPod2SYyUFwC1HNuCdj+2LZh2DrwU+PmQzQVgnZEckozXpScpzGhLJr38dJwf3mULPEeFu0n8dNGi28xg1E4ucU+scY/2o/sOvV3/GRt8X2krBIzyl6y/bi+QNQftYMGaBS8T4TenDuwjcVq+BkRRabgFsBygXJYw14bOubxKZDy2IZOqaxXKou9e7oyvycrITTjkC32pqNF4kmfETTC2Ah9plUIU8OzOOP+TfWZKp1C","layer_level":1},{"id":"d9182c30-a943-423d-8f4b-4d25dccd90fb","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"System Architecture","description":"system-architecture","prompt":"Create architectural documentation for the vendor-rag-model system. Describe the high-level design as a full-stack RAG pipeline with distinct layers for data acquisition, processing, indexing, retrieval, and presentation. Illustrate the component interactions including how scraped data flows from JSON files through ChromaDB/FAISS into the RAG engine. Document architectural patterns used such as pipeline processing, singleton database connections, and strategy-based filtering. Explain technology integration points between LangChain, Ollama, and Streamlit. Include system context diagrams, data flow sequences, and deployment topology considerations for scalability and performance.","order":2,"progress_status":"completed","dependent_files":"seek/rag.py,ingest.py,retriever.py","gmt_create":"2025-10-04T19:59:11.6691986+05:30","gmt_modified":"2025-10-04T20:01:01.6481273+05:30","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjCy7qJxJBEw3w9EAqc5OttcRMGBWFnzhKS/AF4DaQ4a+7Cm8kkdqFImh5EFH6PQtr3JYvgX7p80seftsE2rtgvuCHxt0YJjEoBQGyPBovJBb1Usn8RbgwdMflXmmGsLfDX89kNRChqF93CtYYEpIp8FmjBSShrrqhFgbVoPwBzwh6BPxD7hEjb6x7PdIyPJpXBFmw/AnD2unIwojkQvZ/M3xUudYYRNLN5tjHfb3b6Pp6Duudxhsa0srQ1ICZLY/uzG9ZFkdM9A9iNRivHMuoS986m513tgNON4LeC5p6hr2+oXCox4qhFuRqVvw3piqzbfVt81SRCUV3TC1osA2s5t7xqmVUr+oNchbsE0hOhwiWFiBQ6i1zSqXWdPTlb9BEdfqPrZl6QnoEr0y86GhqimpKHZyCYL3dO5LcMPScr86MCnc5iWKjHqOK+qXp2/CueCO9irpoPkbK/jPUncaC4YatNqtLRJAyugNKBnenyNdA5M/39CCQ0Pz1vPD1H/NoLf61WI+eoN7yUBSwP0V2zkTezrxiHifqLy2xHYpCPqOSC8JcGPTGCXitw8hqbqFQdAXijLh9ZsBVJ7WQWqV9ugOP6W3be6Z9L/vVMKyyRA4FzzXTqE7JjiX+OW7b+4iqK+U4e1I6ENneQ/U6rrfJWz8b0Lkgfrqi4mG19pv6FuzbTHTDRpji7ZW1iNa85NQVE2kAaq11+BK2t8dahmBpBUiic4c75FVNd2Mtbn+vu4R6yvQEN80RhzFbp0T4n+F/Bwh+AnyrGjvpmQpBFmPM0JCrC3zVPJYuxeE6Oy1firNiNSxEXzPdzn7oeETp228EO5gFdZVV9zkVWheMINgXp/T36PY8H62XzvsxierJ/7BwPvi7womyXwcB8B/OqDdPyjN7cQij+2sZGetjYB+dQx6JNCC17q3UIx19D+8B6fXhgbtaPwzTrSl4HQ/PW9TWr++ZPirRi2mtRGDsCs0t8n0XMVtOYcgl0j/UU1Vo9yiYbY5LuBf/KgoZj+FuFD3idA960u+9ypr9KLefnuT2wKLFmJKUi6kLkzVT7owMyWL+CwmttTlG5dxSxJooq35WV8UlJhg5EBs6jT1R+eEC3qyL5ktUC7h+qUslMZ5kBFJMfLNh+lsYU9kg9vXkBE9Le45E8DUfsuwOzgRHTZsTKClF6MtvPSIFWvNmMN5+/2Qm0YqV5ywWfnzPjdpcS/oJU3mMFuh1oQO4mWMQMe2erKmy+cPakpYR8d89aMFdOmaALCsSpzLS586kE7c7V7KGzkPf/Xlb5tYm37N5ehLt53XGeelk9tgC4O4BzaYqFlE9BJKglwInsD8BNUBWwH7orLHlOnKNP4hSZIgL9Qz2W5u4/dCQSwjMjVKbN0BAQ9z"},{"id":"b1c684ab-abd5-4b9e-8c17-7a151c8b16f7","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Integration Patterns","description":"integration-patterns","prompt":"Create architectural documentation for the integration patterns used in the vendor-rag-model system. Describe how LangChain principles are implemented through custom pipelines despite not being directly used, how Sentence Transformers integrate with both FAISS and ChromaDB for embedding generation, and how Ollama serves as the LLM backend for response generation. Explain the dual-vector database strategy using ChromaDB for persistent storage and FAISS for fast similarity search. Document the Streamlit integration through seek/app.py and how it interfaces with the RAG engine. Include configuration options for model selection, database paths, and embedding parameters. Discuss trade-offs in choosing lightweight local models over cloud APIs, and implications for scalability and offline deployment.","parent_id":"d9182c30-a943-423d-8f4b-4d25dccd90fb","order":2,"progress_status":"completed","dependent_files":"seek/rag.py,ingest.py,retriever.py","gmt_create":"2025-10-04T19:59:32.3838131+05:30","gmt_modified":"2025-10-04T20:07:30.5276929+05:30","raw_data":"WikiEncrypted:0j4RRfWJQdenLQLpT+DwLY9h0ctWLZwu8+2HoqcoTgehYjYc5zOlpxKqahTWHGyzCqTow9jh6bCUkxXJK+K8RR1IPDKygAilTz3H8cOpNTBU2P4SN2KPLcnt3Td693jNdRWHfjVd/3QkM+JI013TflJYSAxQMym9gySjxpqFWoE0nWKwnb6QzDoq/V2AH3e7oHKCGUqi1SFcyPXEIM1AsowTCNwP4C6KJ5MVV7UbRjwAyIZq1LL/Eo62Ec0uOTahIPnbAOoYhclE9+ub3TRFIBq3IH6ersRdwIY+pD3Q8koD2Uc5NiqGWPYj2KD4Zmr+qmdBsPcsNyaGC3/11j1DIk7bHITZSYBmkmS3JpWRTEa6p2TwRQE8Tp2lcCW8p6RPhPjgMsNSgDoaIp8ydhiEsh+asMwX9s3lcIBkZ8x+ylAUe2RpJ+V2aAnNT5EGCfHDtl1N4edhVzVUxgQQzGyhRh8tnJLgGvrDMpPqOtUVo+6EWDbL8BYf32ojShuovf+8S/YrNx5olqJJ+p/Scfp8hP/106qgKgdwkZmxhArtoE2fGeDbfKf/9Lk9c1as9yYIVHLo6vgfGGQXmRP6or1xtAvHTgjg2NR/A0sSgbu+p4C5qCzza5nCBL8EoJecjxBEtcvZMOzef+ayKiZx8uuD4JiEwHIz8eMtVSYnIr5LS3GwRhGE7UGUbjvGYx63A6MxRV/awYLImBbcKJZmUcwYYhcbSOEBOL89FR8Bz95zr8BbBlMIA1BARoRu0uWmzuHWsvZ61vqdrl9CGqkx8xVuLaDPeomeN11siQ6/5sKSN+60R7Y7QO91oVfOmnVdIxXQElkYFeiJ0DBp60L3z52PnjYWA+wcUXK9Ijq7hyhVztnZzgN76ZdD67heGomE2Hqdfl9nwWmU85ehGKpJvGm5EYPdeErf1ENjYvUFnXI3EwatSOL8OQBo5rpLLcLE1dlkH+lXLlfIImJ6Dtt0J6kHif9Mt5hc6HGslDYJGcpwtBRlaBU8HVsxUtQDP9X3Qa5m09t8ZsbL222GIdxFNIK0vFkagDf82IjIaOUYkg6z8b0nUUW6q9WfMug5ci4J0NqBR1JZcmEyoStA41veR9E2RYcO/aVzGlKT26qBX0H3gxdrMUUQHxZ9kYWpgmxsYtRZ4ET+pYZfs4nuBq1M2A+O+LVBW3zDMK1EE3vdd1ATfoKp+ZQNJmRVc739t2pqM94owUnY8qsxLZf6lluHaLvvf9apQoFIJy28Dbk5K2Ko/SCkrshAkdl7MN19oqZiyzV+tdNM0I6/ezQt8lERbk48OPHTiMBlQTejW+EC6dJluDlGric9jPxuxXPJQBBZHlvh6xtTWB7xCZutpMKDdBLqYpvpjd5uwZKgHbHIa9ZMPf7sNS3xy+WiL41QQkKZwo6HWBgIGHjpwFFZPkKqUTa6ymqvd6lOJmhwf/DhHW0+vX0=","layer_level":1},{"id":"b1813d96-79f8-4bb4-a945-913004ac902e","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"FAISS Implementation","description":"faiss-implementation","prompt":"Develop detailed architectural documentation for the FAISS implementation in the IndiaMART_RAG class. Explain the purpose of using FAISS as an alternative indexing solution for efficient similarity search with low latency. Document the initialization process in build_faiss_index() where embeddings are generated for all documents and stored in an IndexFlatL2 structure using L2 distance. Describe the search mechanism that converts queries to embeddings and retrieves the top-k nearest neighbors. Highlight the in-memory nature of this implementation and its implications for performance and scalability. Include details about dimensionality (derived from all-MiniLM-L6-v2 model), data type conversion to float32, and memory management considerations. Compare this implementation with the ChromaDB approach, noting that FAISS is used standalone without persistence in this current implementation. Provide code examples showing index building, searching, and result formatting. Address limitations such as lack of persistence, higher memory usage for large datasets, and absence of metadata filtering within FAISS itself which is handled separately in the filter_by_criteria method.","parent_id":"aeec3718-6786-4d99-95ff-9e4fe0675184","order":2,"progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:33.2880569+05:30","gmt_modified":"2025-10-04T20:07:19.930127+05:30","raw_data":"WikiEncrypted:G2aXvvY6YudkTdytNdV43zluKnbFb1RfSTTNKhHPHhCcWqmAq9pMNX1rID4PV9EbUa8I/b9sjiV6GUzOn6oYNshRiZB2pZvQPamsLXK8isGyeMyg8n6EwtW+Nd3uRePbKUUYGb/jbwDHKbEDcd61N8kpj4qt2IuQWe46pnrCtx1sBAWVxHmSDOwYYyIfqWcMVapnXydE4TGLBeZPfEc+eKP4XmxHgO8JPnzZGtMc710LW8v0sQ5MV+x+5N8SVmWTCQIgYnaPDnDeEO4FTRQug/Ko0QHGff0bfQsLir56CCz9Nl+bY0rldcNSPNgl0JeA8SK30l+Ml/u6FgZScc2B1EAwxZ1ELYuICz2ZzhqvjqtGYLVW+OHhkEISuqzCac2xF8u2y304DqYLrvw8mSJbM1iEWomeM0h2G8T4iK3j7TKNcVHe512QqJEgSZueNNqi2K3TiA//lG++hUZKMVHC+31YrDn0umaRDqflSM/I42MbtJWoFNkuE56ITMGNKPcGfvMX2d8/MbdzkvQ3YacvJjmMlpcLFHXVZ9R6nojf61UYyhTWx0JIpfgOTv2lgTmlEJtgwn/vOkL1Sw03rKItVCW2bxyZr6eXGu6a8g9mX+rMZZC3UhxQGPiNyMoTqZwj5fg7zBDkJpoxczAu2JIoZr0oEohufHTKy4uQSU5ba0rABlBZSJeFuC60QxKN6GwUB5ZUprcH79YedRoLrYOL50NMOv/RF7Lj3TZ1b3tKgKvGlK/h/lzhzb0rsnZaCgQ5fIF8KAfUwm4gAqrcpfWvIYtm0M+68I3XNHrHvgURKv7OVqekJBjEXxdYuEkck9v0q+JXvj4ln0j6LLZ0uuiMIQfbAOgI4OW1ctpO+zMdo/eVh5CO0JCxmzCYX0bwXm7bhTxyLDzzIwMs4HsdqZxfD68rFYv8IbzlOUg8XAap51VfvI0BKrOS5SusvM5kBGNoWZoOkSP6aKFYXgRBxvwM/6Osc73b6+4qveXdaHe+P1Qb6QuWj82RiL33KFGEYFTpVsxKESdBfHato0I3EQOl/Cc/4jpO6Eo65Nq5Q32T+bJwSehg1c13bgvpIXAwl7pUdGjUeKcqFAUEuyEWYEPq0aNZup5D9NjEiTtjgdVoHwI//tQUf9LxXTCdBqmPewwISD/q8I3ofmfTRDZLDNfkmQkChdjL5n9W2fRAWFdBhvjcqaDMN2ojskS86yGyaiK7Ibes0mXcfk03HNWYELM/3KeKiYW2lQsqJsWDzOyFg5NERoLCmFuc31BiRTzniGNof+4+mA7tmTHjRorYjpyH7YRiItv4ksqVKXEbFpq0YUHajOHTDSQOeY7hV/u9jVHl3FtFmMZZEdPM7NaCx84i5XTBeltdAsMzUuUZl8R27oKeCaHHb1I9B6otx2Sdbji0DJoVv5yKB5xEHP/ROkeOrGvKncuLGl8lsALwzK2+01pDyw1UlLgEjqyYGymFKzGWJKu3QP3Pd2iZrlSVKBRFA95ShTJnw5SvBTR/pvJRPb6xzOI2jtmDFoSr/6uW/L293Xq/vuuYDEwn2sLsrdXBcus7iZ/JhQsrH4Bm3pdahc1idAoEJ38tCPDDXGtH5sFORQyYEkq74qNubrN53Q0SaK1q5GuIo8UXQDrxd1kwrcl0nxt3nqk9Lx0lyzLIDw4ftHIHK46pHQJ3OUFw2U+h594z5zk0qpEeY83ABZpHC9fnhSBqb0nDJs9vqxug4Gj3xkBUUUQGpucpibM7vsGz5HPrx3jqr3lSaqYAy9Nf4DT96fDqy+qx8SBNFrqbKi73xyjRIaStotU80oPg4MaSdYJmeFCpmN9cHnVRRuqzydiWxvE3iC2iyUmE8hMuaiOnCkTM5JZNN149aEeRkgpWI1u8X2BLrgIeEx8UflcSZxoKuCsVflIE7Whf7tNeH1tY","layer_level":1},{"id":"f5c701a7-3fa5-4ad0-b53c-06ab96138f9a","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Response Generation","description":"response-generation","prompt":"Develop detailed content for the response generation subsystem of the RAG Core Engine. Explain how the `generate_response` method constructs prompts for the Ollama LLM by combining search results, metadata, and material estimates into a structured context. Document the prompt engineering strategy, including instruction formatting, context organization, and constraints enforcement (e.g., 'do not invent details'). Compare the implementation in `seek/rag.py` with the standalone `rag.py` module, highlighting differences in functionality and use cases. Include examples of prompt templates and generated responses from actual code. Explain how source attribution is maintained and displayed to users. Address error handling in LLM communication, model configuration via `ollama.chat`, and fallback mechanisms during API failures. Provide guidance on customizing prompts for different response styles and extending support for additional LLMs.","parent_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","order":2,"progress_status":"completed","dependent_files":"seek/rag.py,rag.py","gmt_create":"2025-10-04T19:59:53.664507+05:30","gmt_modified":"2025-10-04T20:08:03.8012969+05:30","raw_data":"WikiEncrypted:hjmMKQe6U1Jb6Cx3gbGDIKriaIiuGPMfW36fHgWscQobXCyWk+05ktw6BhdpZcJVG7EDbI/PDXCNcGjOsAfQv2wR3iYG7Qc+EpAQFZjhzEO3n5wD07ZjI8xd8Q2eBsFvlAJ+HyT1ObHkDIehWSqvJmOyqlhoXfudUUh8euvHPy5m3fjT7rse2nx+jLNKMPm3d9TgpfdquzVLYVdRSxd4++fMgElaji9jxF3bqDzrdSUoc3nZrDlpHMdRYnvwyzGrZYl6E1dCdX3TfGGCsVMMwmBUEZMuUro2gMD9Ng9LEHU9LBWxFpA34Qye1wDHC/8T6/G1mx8L5o3xT6QWHwTAzRqRXYtvq3eDJCYPy/3II0/DNRI/JJ0HjXdqB6TQdohSZKBVpoO49YVRX3NPh3bNcb+VtwLuorYXubFdGSehBvjjx6d97nwpZoKOfCjdxi95cJwlN7ilyHVaqtoBQti+RpAe4FGdUgpXFvuvhYn4qu6VSIGO+9ILclkt8nr9Pj/VCJsbY7TLDwzSzfe3ddH8pTSYsQibLroF0aqBvrcymKtr9D030u7QmSEXyHwfp+h1yKrd5k5Oo7b1EVd98tpVSeq18YYvOlmrHth/Fn0jltPuXBtnrBHHWIoLfvRT2jKTKgHZtzuF/JR+WFCdghoI0A+j+xav11FbubAgq6yjxkkI2ZpFWaILEvJxtdMQenr4Kw2i+OOCpQhT9Yl37DrI//uN0VY4QsfVozOrU2RqcqE01zosskgRPbT7iu9DXGu4d3nJ0O+u1+yCwb92I4Iuz5hJtCVjhFfgDhFXIe9yFRC5ri3lVMSQae4Z5jeyDGE5U6MwMtDZ5e1uD4ZVuBTMWwmBnL+xkQz8PLzs6CEmYXl78qPHO0/5hDkzEGx3rws/2hzFeAJRStIYwaSl1CbnoIwPh//hfpEsO48R3iLoqvyR857TSDZo2AK1Y1qbbuDTdZQwe+0ZGWKJAzswcZrC4h3+uVSOVEvObMmfWKWbJvElu/z4YaM1uqeG7G744F6RmteBzptqBHAT2o47jLSUz9bTPrDqus/0Vz1ikcqBe4ZX+teLNkCPhYsaJHwpG4l//YqVlnuskQoB8pyVaiurVpX7pfydC9AU/WirsX5UzQU2at7ORch2+OYQBjms1O0cOZ3+6tRCG62eaLhn/uJ58tbQ3nToqmBEGxtbH685HHoa1bMFF5Wv3FJZ2m7jgdWX0duNqEYiSp/QpjQZTKbSH5H8UOou5nAA7ZAqQpvmPDEN/LvYRqhVGVmzJ3XZEMWiqvLrDAry35WD5aZ0Quma5UigrVwcaQt5fdCQcSLYkrcyUoP2ejXzJ9vYT3vMYzvVpoFvDx2K1FbDFaSJR7wrk2AcZYl+BIDwhmKxtZHVNdgy/tbAPJHNeIMIEcimAGXAG3HEsAae7KQCAomau7Pykaa6hAAa39UaGg2w0RvniEDeeFlcKMccSs/T9qJV9DMB5tpqEERddTyxB7Q+QPJtRLhbokwO0wj59oMq0fP2itYitrzfV9qRrkN+MabMy6biAM07De9ZKAWYKC8TLtSJLVkD1tGWZhDCqw3PLIKFJo1gmRQXnd+1nou+yaBgR/tJNpbP5RHNK2+yUJUTFMeXCA==","layer_level":1},{"id":"4fc71009-251d-4bab-87c1-e39f9428732c","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Data Acquisition Module","description":"data-acquisition","prompt":"Develop detailed content for this sub-feature focused on the data acquisition system. Thoroughly explain the implementation of link-scrap.py for harvesting product URLs from IndiaMART search results and details.py for extracting structured product information from individual vendor pages. Document the scraping workflow, error handling, rate limiting, and progress tracking mechanisms. Include code examples showing how product data is normalized and saved to JSON files. Explain the relationship between these scripts and the downstream processing pipeline. Address common issues like CAPTCHAs, dynamic content loading, and IP blocking, along with mitigation strategies.","order":3,"progress_status":"completed","dependent_files":"link-scrap.py,details.py","gmt_create":"2025-10-04T19:59:11.670748+05:30","gmt_modified":"2025-10-04T20:01:53.7903584+05:30","raw_data":"WikiEncrypted:M8uljGDGJ//mcfRJly0hhzZmTRUbyoTcOLj8Cos8YJAltGo+P9r4GKeB+1G51Br4mNmmpwHYPEAn74DAWWhAPMPFX2cylwfIVjheC/ipZc1zRMph3+pWimdLq43OqEp8z6lMZ502j+pUYjJh4WfYoEJ1JNEiM81ieQ2+EzU6S3+GX436CI/L9Gj01ifl4FGn/rfIiuN2QWvwzFSZ87SnhFHisfhQkvyLjvG+rGjGWPoVe2TpxmfFnNDRaSw4mjkbg7baY1XBI6UhqwtH+9D8YFOx5tZhRUqooIikY6AlhTm1Qjs4LiogIAZwykTpHZu1oJEVAW/Cyuo3+9Bn7si49YsLgGGbn6liAaQJfKxoDtQIoEu64hiwtECDrjQe0Xuymvl23rpudu6ryjP6T/CeIIrYoSMaLGwgYVW3J4hwVvsrKWzAloasWYgUUzwXcZGCQPlsMfpiFLfGu/KobDBR0J4CZ7apuvQx0LtJ+lIbkRF0bFkl60wRiPH7CCp3No+QWFGIcRBH4IxjhBSiOsBPtulVa9/I1QtXpwybL8rDiqGuk35NhI+jv3KpYIudprL+HIdsp+kloihjyEl/V1lqrRuk5rC5DChVUEAB0PSbHa9JzppjZ88TxGgG0UoALkFIc/0r3y9RH4YS043f/iHxgWan01cNife9Gd6psUvoYV+MpP/JCCrOc/yL2xxnPBdUF1s0j3dyVIpsfl7kiiWEUjZqDIYlqdZuZm+WAP1Rg8sLYz2HZTlc/1ALAjsCixqj0zz+pZAqUCT7ALfdUtxSB8hPgTrBqLFdB0rVStM/Y/MT+LJDXQ/gbK22FPSkTISuspqV5iIe+k/wCbdtWs8RdRIjqXD1B8NIyD3biwkpQ9dvCzgmix9nA9PmZCJMT1rTNRU7Np/+npcJ8ASZr4CSkGwNMytBJvzpy3ThHZuhjAwED7KNPl8mNyqAEkrKSgp6nuq0Et6x5XBsJ4IKP+240i1elpOth8yIRNJxbU8uUEph3IN8k37Nwr+ekesiufeEb9rph6KnChl03zap1OyLnN81Dn0fw2NuoUAWiYmJc+gUcuLIjb6G3PW+j88AfsPsKC8rdwAjAcbGkUpeosfaQd5R0ceM9q+6okBNdyYrKmI6zMJwaSDUnCoHtnHBz1pOY02+dBUf576Ji09umPKmRYrcWfuW+42pgN3zczkcKbwqi+RVRcXO1O9tAGOcth8v6RBhYsP5aK5pLjwmY48hTAwD8nfN/yaLJa50viQ0rHP2+8ssOwP7FEaJDPnHmJFuX6+FLV7m5PqiQLdsdsNToQ=="},{"id":"7da6c97c-c029-4033-9082-89768f53c4a6","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Material Estimation Engine","description":"material-estimation","prompt":"Develop detailed content for the material estimation engine integrated within the RAG Core Engine. Explain how the `extract_project_requirements` method parses user queries to identify key parameters such as power capacity, built-up area, project volume, and location using regular expressions. Document the `estimate_material_requirements` method's calculation logic for construction materials (cement, bricks) and electrical equipment (switchgear, transformers, chillers) based on industry-standard norms. Provide examples from the codebase showing how area and power values are converted into material quantities and cost estimates. Explain how the `format_material_table` method renders results in Markdown table format for display. Discuss limitations of the current estimation model and potential improvements such as configurable norms, regional pricing adjustments, and integration with external cost databases. Address edge cases like partial requirement extraction and conflicting specifications.","parent_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","order":3,"progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:53.6660544+05:30","gmt_modified":"2025-10-04T20:08:15.3167178+05:30","raw_data":"WikiEncrypted:rkFZKNo+ddIA/fcPVGFyZ2irUEqQdB/ih0aIwFdOaH1W05uLUlxF6RsYXHpkJvVwD27Bs5ChTdX03wBZWjfYNzpBAY1XOXYs6DWUP0mkEffxJ4vSyiwKSeQh8F/tqy3ReRyxvnJMZx0K281auI6HIkecP3PqL7KSLwPuqIkuwW27J7VS+LnJqgS+BoSgRtqqF01BXnrgrOftOfdYAo4Rt/KePaZ4TVHTSnD5Pu5BertfI2Hs0158vpW+uyKV4cyOEdPCiCbwU+L+w0QNg6hlhIhM4Kn1CG3IPHiWEOvSmR6nQvDtG5OL7n2zJFJxKBoE4tEG0wNbyFp3rYIvhdKOULyfaesbVcOCSbGA8R6Mv2W+VhTaEB1oxmX2lS6/vhaq0kfJTMVj0iD6aJM2oPdPQ+YYabUrEpfJ/gn9hWG/82QpJ2j7QyHuQ/p7h1Z3s+LbDhoWJs5iHXTDSIbcxP7LNuvoysUei4EYOqYf6LFIHolhKiELvEUCCz0HOKdgTRUlhXE6z06SEcWBSZEtJuR8lXuUbYmp7z0ZsCoPoUTQTzQYYxYylShcWvB/VUpElC0oJysGwXjVKlwPyRw8vqNiKZymiNgtLEZVTSaQuhBV0dBEBdJ7XkRbuEkdzRsDKh6ryQbRQRO10PxDrEfWPFF6La0BBvfWcOC7kntCVHT+V4fiSplG786M+ihcq51BXinD7hcO9dRN1YOwf7a7wC3ZOKt6AiOl+wWh8OrnEsNAWhwvUpAXCB+z2IaFRLCXbkJxXjBfntz7mXTSzI3+d+12n6ftsDSiHhhlK03pkp8dg1+iCDMzYIooy7lhQ3Mnrk/Cy/nb4QyY12cvPe0S7I8EfPmmB+SieyU5snv+sR3DIJWT8EV+BAoToa2/pok9OREJh8A6Y2vUgwQiF7eoJuqokA8325rQvpxI2kTuErAwCmhRbqEyK9+ie6VzuZWB8rZkSKGCIR9aHQG9GWr2TkJE1Od4dBr8v2wdLHcCLJNgqtPSDRyBJDL1r9g1DHH22hGjsM9SMT8+fgj4WTPRUDSxEcMJbYbhQ5Xjac1iVJX2LRNmXls1hz4gs1+4XpRRxDN1B7mlOdX4ZSFRCQJKDlpJzQ3pTsTdUBzC2phyTQKfT7dHGngkZq04Xyygh3NiD+NEgNuRWFsMSjPfxwZXRKkOdJmLFhUM6JpbsCgBRFBs044kcz9LESozVytwRBtrP+sw5Ld44c1kU0DPNWqk+PVpgszCGzk2NzvWo33XfvPoce/Lt2gIWWzdfHi5z11C7gq1fprLleUwdjVtD9uZrHghD9oukc0TNDgC2a1bD8/qwQCdAFnG0aGAam2re1DAWQPXRm+2esZxnbEMN+BQkzROByoW6DHMiZqv0FKFC7PlCK81CNXbUZMM1z7lubnYlkApvJbvLDM6qCGpO9cImYI6D40gG+BP2mgKQBIeVGqO0tzbAJOCFsOo7nt8HwwQNxuYz/eF1Rnq+B5Jpgkm238dnE+zz36Qti2A1VaofOUuCOXPJvfVyrLVDERJ60qOkgcGSxsTqOjC4vPBpk8fmSHFSqUiwOl1Q9+9Zdg5aoEg+HGJpYaOtNeP8qQHDqBI4uizjzTpuUNyCegLCGcliuzkdmzGLuL1wBU1avvq05/ExCT1F/ZvLGdWys1dS0I4Kn4/+HWQnStkR/ltTU88Uwq1Jg==","layer_level":1},{"id":"2108ff88-06bb-4cb0-bd8b-18bd6316a41e","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Data Processing Module","description":"data-processing","prompt":"Develop detailed content for this sub-component focused on data processing. Explain how ingest.py transforms raw JSON product data into vector-ready documents by cleaning, normalizing, and chunking text. Document the text splitting strategy, metadata enrichment, and handling of special characters or encoding issues. Include examples of how product attributes like vendor name, location, and specifications are preserved during processing. Describe the data validation steps and error logging mechanisms. Explain how this processed data feeds into the vector database indexing process and the importance of consistent preprocessing for retrieval accuracy.","order":4,"progress_status":"completed","dependent_files":"ingest.py,json/*.json","gmt_create":"2025-10-04T19:59:11.6722824+05:30","gmt_modified":"2025-10-04T20:01:51.321779+05:30","raw_data":"WikiEncrypted:YZI97ep9QXDPfRNDXs4+JLXXMdCwOi/ahqqUZ1y/iQJeRSUiS4aRptBvHuAniBp1rV9k1M7tGknBD4lQqb+D0h3FDHN12k8/A9pcP6781g7O1t9l8sHk79eu5cay2rsff8O4sa9TO12w5aDiuzoUc4r3YrBYPIkTvvIVaXpPJGLU/g9/Pw6Tc5YIF+hPWPnQkNWTKv/Nj/QhQaFLnVDHw3NCr29QYjD07pqe0NYHqlw7EA0OLJxgS3PgWguSdnD8Sku+K8wOPzWyDSJmrKqxg+779SLFjx9Xm+9jup0LRYgac/+HZ5egjjdAlliUueqBL6DwaDcfmE7qCXw/Ei/JY2pkrgXOCfAhltEU2F8oTf1o5BmZNI/t21Sqa+Ac7De7AliBQEDJ5YtMgue5YGDQmkwQSaOL+eyc6CAwQoYxpbhOWoTO2C8gc/sk0egtPqk365N5zVOJQ8OslGJoPx8DfI8aHl0eoK5xF2z65lB8hem6r3/58l+8ovjRPZh4qHzF1gt6e6ZDv7KL7nCirDKcmhqZ+YgTUh3+tz1Tu8VxcZZmdNMrMmp9ZlErUY4HSVT64Ffq99QLE+0uIJUFoXdqn1jZqyZ7XGQzVdKetP7j7xwOjyVMHHfHUieTrxZICxrRhAnrHrrK4VlDhPi+AMmUnuM5VDTPnZOtdSLb2t+kitlKm8M2k17m9yXxPDf+G8UBuy7GcWW9JoJpSlmpSS6eJHT+A6KCimhs+4AS0snfFdlKDtWnxA1Ex7MmRBPZ5MK7i0oD609UiOImKuKkCCL4iSA6mOdLjQXfkC2QQCRFNxqUdMbfzgf3454efZtk4liHaG3IVlif6u8KaNzrMxgoB3Wk9amq1DRU2TaIwMBDvpSoaaapi78vXMjqpfjV+PMwLh0kXxr9kWjSxHqFf98varzbjpO9D7liosq4vN3WO4KPnv3Dl0S8DfDDDQJSmTBiyteYFn/G8d6543qT61QkdydXIQx9QwECUx5cuAp/D8xQBSt8YBM3PBvtfIGPpqtCzSIa5IBN0a0Odgf63ItBSkjt0tufONuocMkljv0FhnfgQzYsHj5O71i3h0UHCQgx0fCmgj/vrwG8II6NpFYy7q6Z/iCKocwK7w0YTX8z2Qr2R0pu1RcofzWXkVNwahKRPfbKQF8g+Gui/DGj9/iS/kdNJK4spke5BbQgEIkx7b9HJQjrfqXZF9GH2chDubT/9+W4yz/LLkA9hCeHdcYwFQ=="},{"id":"332ab947-24ad-4740-948b-f18647950c80","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Dynamic Filtering Mechanism","description":"filtering-mechanism","prompt":"Develop detailed content for the dynamic filtering mechanism in the RAG Core Engine. Explain how the `filter_by_criteria` method applies post-retrieval filters based on query semantics such as location, GST registration date, product availability, fire retardancy, and vendor ratings. Document the implementation of each filter type with examples from the codebase, including regex-based location extraction, date parsing for GST validation, and text matching for availability checks. Discuss the trade-offs between filtering at retrieval time versus post-processing and the impact on result relevance. Address challenges in maintaining filter accuracy when source data is incomplete or inconsistently formatted. Provide guidance on adding new filter criteria and optimizing filter execution order for performance. Include troubleshooting tips for common filtering issues like false negatives and case sensitivity problems.","parent_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","order":4,"progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:53.6670811+05:30","gmt_modified":"2025-10-04T20:08:26.1457929+05:30","raw_data":"WikiEncrypted:Ph2tJR82xL0YTniU0B3H4AJCnXoHiDIhsaoOZT5HGeLxriGnnGdzkvI/9pJOFn2zkL+8/T32A1knVtL30LSDlJAbv7eO8xvTtDBGlBzBxOGzIhb9oV42GbDqis0fvX5LNsLut9FtFGrZFDm1EKGJfGKdrdory9obgB1GKl5GCB7Q3gH0fCGQJn01hiP24zauCwmmiAjJZ+15VOFNj7IyiIPJ+ycMoR+6e/MoxWY9ZYIxxKysZGLzvWY2lmmbS6waeHRWJjssMKQwUmi3mLQY/JJYq7AqmUBSrXWqHAOH8IQHUIvy4uSonk8fnZnXxteqhWqcHdMRHJkD7MZ2+JnhOysAX+6PRHmwW5F+8rnwE4tIdgpUSuScyFGkwW2j/2hHlmjjb07Sk2OAq6BG1NyieQdHaxQVzVc5peIqvvkGhtkN26mwR7ZjwJPDUsvs89j4gtl6kkwUcmUjUfGkTv8+BCw7TMnLekhFa4/+QsH0V8ZUx2fhTJKf+rOtXC6YqC2q+TKMM2pzXhKjIKHHqBsTawre65Ws0yLxVVlrkVNN9VFqGCtMQXyWZtdHmGMlIGQVDbZhJ00QMunXvKzznU84bV5m3459v16XoUikzXhHk5DiLBakSJJO6CqXlT1e0Tew2eFY9/v3GTi4/ZC5ruJvoMezUe/LLqcejI3Te9vPjCjK15U0s0z95LYDZ8a9SzbSmzUNsTmIfN3A7IA02Ub1Eoc4fBT7YllWZITAY30P1Ixurz9TTqiTPYUl9X6pUC+kgGo6obtBwpnRvfncUfk9vjIBkUIsjv9YDgEVCvAr8L8BtoGU86x/onMyqt5c5S7vXcBCKi4Td9Cdip+e2V4Q9uxuRficNOHVfmR8d1OwoxpaH25eOx59rLN2WkGi9VrUtCguVwmKN20FxDPaFCt3Padqk/XDUQkV8lNJ7+rkuFcyAJo4i358CAjf4hpiz/WQYi7ihHwzSgqBxiBgqlkbOg0RGMQABqC6YAK06+quf/K8oB+XJnxdsaF8WFPwT5WG85rXtNQUPomrYk4wVhdCoQxBQvf1v+zWL3iAuYlGWDCx6/NKv0KnHf91ygQVl4cZivP5IPHJULZXEPtiGvZVurTX/Ks/Kr9hZCa5TsJwTLIOic2uB6VcQMjdQuFvd4D7shKuZ9FuEpkgD6Z8x3S1sysf+5r8XUX+B09WyN1H8AEBpq0i+yv8eQY+KxSJ2TdtdjfegOQNHH6NzGV2g8eCsSI+N35CfkobMAWseQ0haDqSVDR3+4y+lTUvvXrA3GVSbmFcxvT1cvYkYbztX37P1YQTtRls62SQCbO0QPVWIfRRxPD6vDoxsBupDMY3IVh1QbWvC1/ckqzgWGTPApgfO0Tm+U+M1Ch61Bqrudwjf5QKeCDj4vTY8R2SXHL7/bq+T/ysMO400guyq9ErzFaEiRPDDKwBcF788F2vKxdxjMFVAejH2tKwRP2CPlT7aGTFQFuyt4jTWm5GAU3mjlG7ZiX9UDMTAz3zwOx95onVezo5SAcQ0N4j6Mhhl/mrWz/YvNlpWsSwzrS5aGSwgQb775Kj+crEJS/Dr8XXwIwRJrE=","layer_level":1},{"id":"aeec3718-6786-4d99-95ff-9e4fe0675184","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Vector Database \u0026 Indexing","description":"vector-database-indexing","prompt":"Create comprehensive content for this section focused on the vector database and indexing system. Detail the implementation of ChromaDB for persistent vector storage and FAISS for efficient similarity search. Explain how embeddings are generated using Sentence Transformers and stored with metadata for filtering. Document the index creation workflow, including batch processing, dimensionality considerations, and performance optimization techniques. Describe the hybrid approach using both ChromaDB and FAISS, their respective roles, and how they are initialized and queried. Include configuration options, storage requirements, and best practices for maintaining index quality.","order":5,"progress_status":"completed","dependent_files":"ingest.py,retriever.py,seek/rag.py","gmt_create":"2025-10-04T19:59:11.6733094+05:30","gmt_modified":"2025-10-04T20:01:48.0004252+05:30","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyEpyjOtSxg2DmOXjBpu19Rsvm2GZ/buuyIPc5YN6/G8xTVjQCtLnQFWO3r13+1QTpxrCmz28TETMsfeSfmkSFDr/axa6gXUoGC1RvnsiuEQC5HEqan71tzOZwh5APcX6wdMyC8FO33C5m6S8Ei6RXj55mBDHccKkKxR43uT28USUWjvAK7MOlFgtV3K4+nbFkQVoIjnszZSHw1n7HP8sdmoCaDW/c0u0NOjhi7X9tKQoGiczljL8ZQ26VRA9lTeBQM74hlOqq1/hyBvPdSgsXFSOCZ/QcbvQxHRaxpEPGDpGsfame0utpssBlJ5UbFnLMb4a1rhSmnYWgFqf1LEF7IZjrNOLQCXFyCU9NieBKbqp79Zk0D33PeJw28zapiCUde3BW976U/9XfXvmAvphZ5oW1GV1wt44ITkA3ZZIwZ5w4cBXaezxO3u14+BopHIIW79HQLgSPeIMA8aJOXJJ7ISlE67BeqlF8eZBv7X73k033gJXJa8WAyzxdLvwogrFKesBUlg1hNobnVCgR3+lFjkIS/i1DrJTWJuTcvXOogHdbNFMqzoNdKRbhyhvEq6ZSfPF72wpAsq54Gr3hvkwBs6owAazC1PGSyjH6lzigD57RZo7osnAnW7BY6DlDLEOccWnBesPfk3oVAW/+QKFJmuv2xvAg0/Oc4tRip0qQa4bimDEHH8uahh6Qsq3s5NEyCzh2x/KsVZbmqvEmz8o2yUXIHcfzQfUFltGc723uRkv/1Kkwz0yzd6b+q+mglR/O92M3B7/QhOdaNWQuQgxA1rzLNyMD3nRvwEMehc2dg1O3ub5U/Vb8uUf2IrqsdIFLXzlAw2+QR5tDQ7C87sw3AYfg2W2htFz9MWw+9VY8MjVvBF8zVDA54/+d9l2Z/+mIq0UTsYfTdHSt1H8qmtA5ctLD0KB+BMgoop9ZC8Wrjg3GSdzHZwcq/3016YhuFzpJGy2tC0JesOiJV0WmVQcv7+ukWFJDD19cgt8QVDX1qkKKL7FU21863Jn68iMuVeD23Asla5v2ug0+Bb+vAmQS7TbMI0JmurryTyP0VLqlI7d1gg68kbMjtkGQ49bDeP4EwFxWihvCrv+28sejjcLr14You91pg3K+7D0HXiMuU0DgQNiIP5YkeR8pZxv1hXby/C674kHWeGg91Tv3OiRa4R5JL7yJwm9AkXCPyKVqVAKC29C/ehwtVc4W0Twe/QzYSp2x+2FAxv/J8Z9V6cRQ1TI6pi8S768wBcbNW83XgWKYjF/g7HMzjyWocZ5K6ZEnvlU1oCjzW2ZpEMQyY/KOIFjAcJPy4QdFFFR0ndGFgYRi4Z7IayR4ZXVhWDdUnmlJwxWB40uQuJuPrfk+JeDfyefoyCty4WWSo8TdbKF69vc"},{"id":"16697a47-25fc-4c4f-ae2e-7a9ef5ce6d6c","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Retrieval System","description":"retrieval-system","prompt":"Develop detailed content for this sub-component focused on the document retrieval system. Explain how the retriever.py module implements semantic search using vector similarity and how it integrates with the RAG pipeline. Document the filtering mechanisms that allow users to refine results by criteria like location, ratings, or availability. Describe the relevance scoring algorithm, k-NN search parameters, and result ranking strategy. Include examples of how user queries are transformed into search vectors and how metadata filters are applied post-retrieval. Address performance considerations and accuracy trade-offs in the retrieval process.","order":6,"progress_status":"completed","dependent_files":"retriever.py,seek/rag.py","gmt_create":"2025-10-04T19:59:11.6748805+05:30","gmt_modified":"2025-10-04T20:02:47.955175+05:30","raw_data":"WikiEncrypted:3166zDJNeEBGH/o+3+SHSmyyyY4h9qu9+AQwyKrE78trTywAQoaehVvf5SeELrbfbt9NQAiWd1iEmpF7G4/vwOeftI7GHR9Dk3mx5UeZ+AENM9d6lHjE5NRwNWSPXcBDVyE+Tug4P7DBrUSbfkEdjIkt9+GTAs+rLHjSyFcMHnNRHbnM0QSfLKfKR2KftXeUxam1SySdXDFag2bOUDP7ozkCTWubjKRFtozDkXRFL/C5o2hLANu9UF8cmxLfpREc9dh9vIyiU/COAEE6oNZAXdbbg4+Q/rBqq2FlGgxTFJ9ximeZj1pHnLYmO2Cn1aB2Y91XfAM5jJd95Wv8rgSCWBgS9aA7z+bY1J/baglFzmeDXGnXGBA27wtxefEwkEak40UJxB3V7piJkQ65HpS3KyvYeNORHaT12iQelEvotfT0fbPgU/kBdXTvzVHe/t2xeMX/a48GVKTm6DOYSxM3XmKEPAFAx36N4o7ZnnBd9Mw1XrN30g7oGmuTFK2G8HUXGG1asP5JYZwLOfcrcD+7VvGgaxdqf9mRneodkCf8dstZK95lkUzOfPhpj2qyK6wPDj6kPqmR/QK1DOUEKphHA7r2e5cb+8KXmrljUsa1sRmHumIvIokeoL3gcEy/N3BSUHkX7MAbQcHqMVlc00l9nl1Ltmpx8wDw2pe2iTmHA85n45sZm4jnu424iMPOfFQ3zsupdPOa56a7xq15dVApyVIU6Y7glyKZeHhigbD75mZUCak9+teUIIPL7fjOt5KATnz+P6z0xiyKOZOHO6sHUj/HUXmbYuSw4YJa9EU+l69je0eRGmV4O6VDGtg3tj0t5jhcOKldfQNGoi7UIRqUWGpstB9z0KsBCxR6G5h9O92P0Y3oUpNFGEoApJ/qvFKerDaBBFcS2YHd2Mpjf1XNpXfYz37zWV8hMf0VCD8CjWwundtm3GSJCwLqQmnsRkNmwqs6Gp79V8WD6B31g09naUSa8KraGszh1ort+Sb5/SBp31AkuqwdYaCEYnFLoX/mFjkXA/fR887al3xncYFzZulTutUp7eJZKedyNrKmRmbd3O7SGufzEh6yS1MIHNXlgoZkydiIHn15JaSU//ggDb1ujBeqZAZJ7T01KiNj8RpcTfnPivKh7e4K6xIx/bAjY17jpsYBZrQtCLT9fODTm2k5pIKmwKxJM3nL0+wFcs8KtiZelQnRSbNFL6+Qos6W"},{"id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"RAG Core Engine","description":"rag-core-engine","prompt":"Create comprehensive content for this section focused on the core RAG engine implementation. Detail how the IndiaMART_RAG class orchestrates the entire query processing pipeline from input parsing to final response generation. Explain the architecture of the query method, including requirement extraction, search execution, filtering, and response synthesis using Ollama. Document the context-aware response generation process, prompt engineering strategies, and handling of project specifications. Include the workflow for material estimation integration and source attribution. Provide code examples showing how different query types are handled and how the system maintains context awareness.","order":7,"progress_status":"completed","dependent_files":"seek/rag.py,rag.py","gmt_create":"2025-10-04T19:59:11.6759038+05:30","gmt_modified":"2025-10-04T20:02:43.1737236+05:30","raw_data":"WikiEncrypted:5AFQp9DHgLT3d74JhuM9ylt800ZQ8qGZfPdQcp8EhuidTA+Bkof6w4r2DURGNXlSE2irydMA2x+YYSFGx70eaHSdqG024+zTjQrnpk85ylVS5j4KLL0VKzS453V0IMSHk3k1Q367h4H+NL/71kxYRlQ+UM0u4OiPOa5yzaj6sratQXRkI209E7TH2JwqJCEplz8IN84h5Xo00PE7k5gr346ZN55yfLMidhbheRAigwQk6r+z0DQuERRJmGwIFc8uPbMOIEioWkRuK4vtkyW7qGY1K/hjEDexORkNaUu4kmHTwm6j0fkOhWkt42dWTk0DEFR/0819HYywNnS+1dkfF+RtfbZYXUsnO/4P7L69uQcw8kiShRFWR2SBkCPaqfK04N4RgPvJENNj7UoUdS3sryKODtCKqla4QvF1QVCXkrYLkMoS9Gt32vawDmHAPXb5tozZw6PtuTVM+xNKS3YpoNKOItfgFCa0k3S5yUctHm7T3sW921tTBhO06f7GDJonkf9UAse0qMoPcSQEAuHJnPvNlyltQccPZoUtODPI5z7pu/m1JAk1qI7nRkVpu4fdx42/W8UAYkZ08xkAjMOS0Q9+E2dW+98bXEuq574uPQWZk62sGzxiaf+mV6VV6jFRITmYCi6eUS72pAQrQGujs7tSQQ65LnSCGy0T5EVF1HCbc6GNnzGgcxZaDZ/jfhSi5wg2G5/nEi1apoZAznrVYr0wt/fX+Ptk2tG6bw0b1n0Bu73KvsDRGwJbfyrdt/MhOUFOP9pzKmsNaS0Cfj5R0bb1ScwEU+BKWhCucv7c7K9uc+MvwlruZkycGgybwYbfAH6zPkpTUClxwlTifdQH9lc+ntT3Ja0F1O7qa6z/Ydb3jz58svNvzO63gDbVMm4l8/t6d5o8vpsrfUnHlkVPOsWmC0X3XTizx4KlWKih7BkOdRtfx11TLafWvaemDYEAA1l6gwwqV08C4+FUw4rWc4UQVLDIOhFY/V5qO6QQJ9hLmRfYlpVEXXoV3NXE9gsg3+HdR8gZs+j72ZeDyPtdK6+QzJVs04U3XwdmI9OsJrYXebrN+ia4OQWMQ/85kdIIby5D+aXTEeZr7T63XEQDcYlqzCxW4/DDAokZuHry83fRbkyxmRMneT6jwPVJ7F7f1WxU4SHvaAQRhEWzTmuSOh118UnPtIJUkAoPtK4Wim2o1M3lS47jjKBgRSzfeZWTNqhi8tyNHB5Tbj9jPVEqtBkQxIpFjKh1gV4N5bS0czG8h6edNcRahNUHVcX39uehj50ShqRXJPF2FBJjYadZJLrj33EUuNbAP5rBV5SyLDLJndhXbt8u5i4bi6V4ZlWl"},{"id":"12e1f545-ba8b-4b22-9c7f-5bf42d190fea","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Material Estimation Engine","description":"material-estimation-engine","prompt":"Develop detailed content for this sub-feature focused on the material estimation system. Explain how the estimate_material_requirements method extracts project parameters like power capacity, built-up area, and budget from user queries and converts them into material quantity estimates. Document the calculation algorithms for different material categories, including unit conversions and industry-standard formulas. Describe how the system identifies relevant materials based on project type and generates formatted tables for display. Include examples of input parsing using regex patterns and how estimation accuracy is maintained across different construction domains.","order":8,"progress_status":"completed","dependent_files":"seek/rag.py","gmt_create":"2025-10-04T19:59:11.6774371+05:30","gmt_modified":"2025-10-04T20:02:51.6207144+05:30","raw_data":"WikiEncrypted:rkFZKNo+ddIA/fcPVGFyZ4WcYwFRv4X5UMDRhLn7PyW8Ayn90bg57mytYIDpMZ4GMbihgfsg2jrdyivbhDH4sxgcS9tZPmezG38R6pt6k+4Mm8QeAQKm27FW4IIs0ag/LSqDtbaQjQds+ilNtJbdCm6zBFBD7fjqlbd1uFBuWVTHTts5u3estK6Zsmn2xeIH8lnncVQxe/3o//S3BSrrVTgjHLESE/MPGA8BBfjHNZW1xtt/SKgiXLpkr/0yLuiMInVLq4C67l5ep2NsIMTVzXOCYDQwDDKsJorTQhBKG0/bxmG44ozaEhHb63oe/0ZpmCUOnJ1GvpcyhGS9lvnFnzdOgR2nFGbXfD7YxTlekxyGYsdc9Mu1n4g5gFWA4SB7yn8t1a4eZvAa/gBlr2NAC37eQuPmLFiJT9hnUy+QcMmjVFZI46BJT7PtdPvXDLea+yw1zF2zEelOfBo3iK4Ofxw5FpiBWh1kMegeTc7SbH5lO3QUJbjM4E0WDJ9k3csAPSlStYTnwQQ/enOMHVM4yrv/Cm4S25fwnVhldOP5y0RRbvI4+t5L8gjE4EvcQS7z68Q3DS999cqeH+fHw+KZ7DC+gM/zCZO97dIEUwrzJbHKkEvXqmkqPO6/kZ5dQ1N8UNTZm7ElbOkz7V8JyU7LCXrx73cBwjsCtDto2Wjjtedu15FzQBHEjvRxrsFFuP4BUCjF0isgq0S8s4H57wegrRPC9MZi7OZSt7Tc873qcywZJ3nvRTynBu8Vl7TnHXHSFkg+wezInOGjkK/3fJRQIcc0OC0eq7ooKm2oTRlyyth9NCKn082ctGB4QzGfcvsgRqyQjwToKD8Th/BFwyNcY2Ep3FCVVxJuF+jCEw7AnAeo2IFyIcbmmEump9i9A90ePmCU0gE1Uy1VDmdP5H58TaLYYfgHeeo6CLac3T/uMqZgQVTpekEQWrFRZDsX0JD47Z2+W869rL06IowgLJY3nW22u3mjbQd5sjDv5QCXbJFO+BfinBoxQnEj97RmSWc830dC6LzmACOKx4cYlggrXZdCHp9FuyEnLrNBoBqcI61B1bB/rVTi8uTE6hPmSBqRW3H7Tm+nOqlGhAahde5obpkIEADxYuwejcJ6BTY8KBMPFFg9uw1CxxFjRRPYjgQad/Nqj9ucEfb6zM1VX4CsfWqrZkfGdwYzEd4PO049NkZ4Ioid+dYKnp7VEL8hBNwNb9XWDxlZ0PmazoShzCwKXp0hL1y2gnPRHerB0j9LO9U="},{"id":"31638861-9219-480a-9d53-94cc2d1005d0","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Web Interface","description":"web-interface","prompt":"Create detailed documentation for the Streamlit web interface implementation. Describe the user interface components including the query input field, results display area, and material estimation table. Document the event flow from user input to backend processing and result rendering. Explain how the Streamlit app integrates with the RAG engine, handles asynchronous operations, and displays sources with proper attribution. Include guidance on UI customization, responsive design considerations, and accessibility features. Provide examples of how user interactions are captured and transformed into backend queries.","order":9,"progress_status":"completed","dependent_files":"seek/app.py","gmt_create":"2025-10-04T19:59:11.6789784+05:30","gmt_modified":"2025-10-04T20:03:49.1713108+05:30","raw_data":"WikiEncrypted:JbdX2lhA+h7n7jm5xaoatE7SIC/6qCnsOj/QJ8ksY90pBRKKebFditqUsAoBYL8MFMss9inC2yalIc6bfoO03eTwt5WopJX2qB/vi8GI283+r5KvOQpxj4nSkngH31xk3FXeFXjdaop9dE72JlRAKww1Rj6qcZLIFEjqS7JG4nEe/Hnlmv9rLU57YEeDnxPIyJ2taFOa/DmP54WdOsE+p3Y6MUQONv5CVkjgoan1YI/74xuzLDZq0NydnfXruHUeKsjA8dBKXBrJgkjTkNNx443zt5A10J4XcsWsPibN6vOxuFGylXFepIMO2MMVoKPwaWE6dcS7PzlXE65b09khvjLKHuARKne5o187xmXBKVmJRJRME5s6icNAcw0ayWzbxZGRz+jDMWP8UipQ5/6HOfd9XGERugxk6D+L7rMpXwXkFvLscdbN1Qxd0NePz33lZnJish1+P75YiQma8Gv1UeYQr9YVjXTYgdsDSRnM3QmEnVnEojxIKkyENtHyadIxN6eno/3hzsCrXTPs9/ByHleZbIU6D8DW9X7TYFfXZggaWzkvwbcDIuDCCSPslLHsMnDoZvIMxQGyzz3ibVWMFqp3l93ZjI41LrH2sIl6KKqCPhJCjq8kvfDY1TuQ2wr6pbs+8W3I4uS6duvRH9Sl6OtTbmII5z5JpwINv8/xTHwl612GM6O5yqzzHNcII4+4BAMUm0RgjygavSutOToM+zHSxlQYnnEkyYbvYGjaILkO1d4W1YpTvEfBDLzrRrvq7+jR4tFuzy3QtOkDvg3kU+rNrldxJdxPATDagknWiecRg3DLRGvU97BRpciP9LaqffoiXoOO7ru3yI8yKaX83BilrTN0d/e2kIOp934oiWMbrR2WamGQXVkF1AQlmr+2PzbvWN9hukbSJM+tdhmU16AbW9L1GVrkemPPEcPD8Ew+SnPDHtdZ1h9fVhcKTpTBOmVvy9zazyAjuv1zieCHekUue8duodGN9rRkE/7B/F6q4V9IspnMrpWqxUJ1G1CSde2nZXHaMw6dm2va8QHGIxyYKezK1Z7qnQBLp8fC+XNehiL88ppOBkzn2ld0isoJghBz8sXfzb5O0u87Jel92uZ46C9741h1lpPDoBHZGy/D9uwvNm9z5CrnSi3sUJaq"},{"id":"a1e6e695-19b6-4a47-8cb6-3429b70d7130","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Configuration \u0026 Setup","description":"configuration-setup","prompt":"Create comprehensive content for this section focused on system configuration and setup. Provide step-by-step instructions for installing dependencies, setting environment variables, and configuring the RAG system. Document all configuration parameters including model settings, database paths, scraping limits, and API keys. Explain how to customize the system for different deployment scenarios, including local development and production environments. Include troubleshooting tips for common setup issues like missing dependencies, database connection errors, and model loading failures. Address security considerations for configuration management.","order":10,"progress_status":"completed","dependent_files":"requirements.txt,seek/rag.py","gmt_create":"2025-10-04T19:59:11.680515+05:30","gmt_modified":"2025-10-04T20:03:52.7751242+05:30","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllCBO1siNO2Gprfb2oscPBASOkrJ3q5Ep4VjfqUE+XCSv4iW/AGvi4GGTYqzHbrnh5Cqu8ND4RvVGc7emRq50mmwX/fYopshBCYcEOuhLcryFjS71YCIAqtnF3j1aB2wdhW51WibK65F2ZSusVhc8TVDGNEGHS+rK6mcuyZVxu9UAnNNacItg5BfHCoL9qyEPtTV3rNa4LW/IxZfbdp6Jg0EGY3NyJGkEwYrwkS7sFOtf0ADEu2a4nwR1J16uJiR+C2MPn1+IWRjawyRtmGwPyAyQqEJxSDg9Ty+g1UbAulmI17JLOCoEUsMu9fFrXGn6AfySdrKcXrdYyCNq4oKyvaqRWs+2qkDCK/VqYF9kQEUjdaS6mroehNxq313ZkYnXlh3UtAo21kEwwFmRIpR/DUsxzWHkuSFT0efP243Ua+572/ivsC0FBFCeUKz6FJdF0o3Fl+aWtZ0m5rIrsb6sqVykaemyD+b78vVjBmFHlSZsfEcI0c4UDhjGDO7dMzmwrccFlfcpyjascR8/cxpMiQP/KgSUGEvLPr6czvjeEBQRwXfR1+ZYJR4o149pBGHFVmssVaRsfOZnmi0nz7vYzEF5f6I3qdYiV6rx6h5vv7Jh3GLenN7IQF71R1baVBMARi9/4zu0QsQ7bwCW4Q+9BHQRHrao3MLdfFC2vvKGs/JgOQ/Gq0pJJxw3eViH2oodBcsVb319nisy7VTTn2jjMhSQBKaL6LsNfmKwVOzYMIfPoxaF/496cjguElvQcEs66wkYQjJQoflLbCodG8Bs6PR8XjC+q824+/x7cAXz7IxNRPWH/v2k2uydlskgTddXDuF5hvanfFKXMqidtQ5nKu81s2y5Z9owx/q6oMlpysrakXeqQWHjuPkOh6O4roKzX6H8UGEfDrmIGrCa8bop6qlnUwl7vcn0MnAq/3D0JgfkcPD1SGbdGVK3p4cHstis/7c8TM4wQmqgrDjdM9N7mSSI0B3Q6rEWaxp5JuWUDFzZLP8yeaBqoJyZnA5EEbMd+MrygfaQTJIHxEEvQzu0mNWVablnrS858SwKHY4JKc7F6Ev4NbVBuRr4pJWf/2OjMlmX9vR9b6I9veucTiCT1CMA73N01P6aZ7iQOklG035dHSbEJdbD7H94ZYTF7A0mCX58z02G4INNY2g9pRjYtwc4sBbInCpFymvA/exhQVwo/rCjAJSk5sg/yWaYpCz/ojGisLw+MruguTW4kzSox+4cqsDW1P71D8U/xFMOznQq"},{"id":"05acbb95-0bfe-4d89-9400-e4e0dddcb6f0","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Usage Examples","description":"usage-examples","prompt":"Develop detailed content for this section focused on practical usage examples. Provide concrete scenarios demonstrating basic queries, filtered searches, and project-based material estimations. Include code snippets and interface walkthroughs showing how to extract power capacity, built-up area, and budget from natural language queries. Document example workflows for finding vendors by location, comparing product specifications, and generating procurement reports. Explain how to interpret results, evaluate source credibility, and refine queries for better accuracy. Address common usage patterns and anti-patterns.","order":11,"progress_status":"completed","dependent_files":"seek/rag.py,seek/app.py","gmt_create":"2025-10-04T19:59:11.6815404+05:30","gmt_modified":"2025-10-04T20:03:34.4486578+05:30","raw_data":"WikiEncrypted:AC3XqhqRPl1uFgKdX3GWmQDqjwKlGJ55lXmSaplw2Z3lyChg0DT2fRk0zcrXfnT+P2z0lspoka8hj35eGvHuT4v4XgYOt7UbGwNdoA2NopP4ARRdClDaHK5QmuFdPcIVp6bG2p5uct7Ar/jGbyh0xuuEi84PnrGLI2LaguoUuBjSwRwGjwDvmCIVliLPuKw9xh2QPv4dFaw40A2j6CXQr/prxUtz+yQvNDxMY+f0oUkZeML9h/GiecNihHsRwsDMb6ZJngxRMVDU++qUTa5HiKTXfQbNeQGHOUzWqYxKSGBj1/O9t54LIBPkUSb77w6znClB8kDy3tCB3wjGes16pURaWiNnkbE8WCYcDxPRlJ31UwK21zA6B5ZahAlc5y6UJmxEPQZ78a0Vxf79CEP+I6Eso8D5hsFJqp+Z8BHGTYa6Ky0EFTOgHRQe19QXKO0cYW+j72W6D5lLuFDPpJxIZejg8/Eq4zfnJb5mF3lOh6k6QbhbzqMsb7E4Fi0bVl/mFC4qzcJipRFKqkzznWLV8kLDYF4hR1zowX411nNjwS//ui1aUiHsKjYG4YTQLbfo5XURJV8PRUqyOdodCNlRJtyjhkSuP4J6bjCIkcE9DJAX1tbU4OzN9+34MudMJAZaGBz8ktAZhhHDRa9pKq54O4hWzkGL3Q0adEYsPbMeGGy9ogz+bV33YwgAS7vT09m737Vtcr4TNsIGeAm6VQgLF6adqinyAVrmgfZhD4Mlcken9GCu5eojNu1o+larjt1wR/ZV0c5eNCTQ+WXPzLp/X9mJy3CNQ9aproIxEa4MaOzkt6guTw3rPEFnfO3ZRsxZIpisJx69YqJjWq/W9T6jvh0q4dGjfcwmi6/M3MUKe8Z3lMqAbe3wgO0bhtAd74fxPOL/WgHFpyorQsiAbElvvQ+pwE7PZrubezZliOtWHjBucJc7QrWbsf7Zcnovk438RrXjTFDp7qZx0mWfgYRUdmaxTz5KEL1Fp4YGb50AeAIdjGfIqWqTkxmdZawYVocR3DiukwtDN0RHjL7UMVObR82Y8XqFOqWwHHz3JRxOZBSFUVHI9DWngZiUSrg0JQPxy41zUf9yV7B8jnk2bDFW2/lqDM5QCTas6uyap3AsEGU04x50XRoWUzsKrPSZKm8SOhnbOxuc6myeG8G4mSQxsg=="},{"id":"92588865-644a-433a-8f2c-a3d6c5a68a94","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"Troubleshooting Guide","description":"troubleshooting-guide","prompt":"Create comprehensive content for this section focused on troubleshooting common issues. Document error handling strategies for scraping failures, database connection problems, and LLM response errors. Provide diagnostic steps for identifying issues in the data pipeline, including log analysis from scraper_log.txt and progress monitoring via scraping_progress.json. Explain how to resolve common problems like rate limiting, memory exhaustion during indexing, and malformed JSON data. Include performance optimization tips for slow queries and retrieval accuracy issues. Address debugging techniques for the entire RAG pipeline.","order":12,"progress_status":"completed","dependent_files":"scraper_log.txt,scraping_progress.json,seek/rag.py","gmt_create":"2025-10-04T19:59:11.6830798+05:30","gmt_modified":"2025-10-04T20:04:22.258132+05:30","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0qONfe1slua9xE8U9jtu6COOIuwIXwHek75biF35Qs64P9hYx703irKbnvr+DIic3rjr77Q05SwxPuUr+t5Haow6zUgxSb34jrj1U6HUBMux+mkZVgtblFf4//WbEPA2mGVOkny3oK1cGjNG2/92OpxX7IIBOPlUSo4fZWBFshsNMI1jkn8t7s6XeVUvfCbVUlxhKFTw2o2DsPb20Fom798ZWLJeUe1DV9y0jNEG/9kMEbnVXGBnTzO/RKzjoLqubN2vkOeFSIUqWuD8XSHzdv9cDoLnRO2c2ZbX79qar3WAjnTeBmAd3RTck/eo/i1xaikrhm9rDyahdiBbw8V6ASCi9NyuYucVKnhRpbPnuy9eQzjwNpECg6lD8VsT9agk/pOMNTXq7esgPRvikAdrg4XNd0ctbhOJdeZvLZ9XuGyd8/A4k+pNth9AHmy+m+rpksSE0j1KIdVLTdJnqsKTBdFyMVyCRjGywXOiLwXjv2oqSlI+CJbaqXGJyF7ZzvBEgO+nS2kUiuA3UZUzY75jc2396upiyppWHBLwmAnBCI8rkmVwFqaUmp1+OzSxIaeNJoCNIZlPvmi7dBUcMy+7A7LMhN9k0o0WNecW9y6wQCX+Z9gdh5ncvhWwU2c9jpzaBqp6DA68dY9dPDNTfiMg1LpkRydP3MVFA6+251GS2YZtdQhj1oblZip5egc9DVYZnqkq5HGQfJqgz9OsXAtl94e+3f8MH/udl/L7wso0rYLPIzc4xZ2Gr0+1/x0+GhRPKJGE5By7lR6PkydhoXkL791+2zQq3tpZ8mdtxnhTiV6Q/B798VbhYhndTodAR5Xt+j7rEcyaQFru/fLHvYOyx2mQRx2lU2g2xrrFPBI3yEhlHA85mbqcdXS8k870CjsKUlw2PdXjHKegpHkN5FNYEUBiPdVTCJFbgCIG8OfQ5KTgKy8nKI7qw4QcBvLMQL+Rt/T4Tz/gOkySOIpeqmvF21aQnCNTG4hENJRpfetiQ5THl2DpSg5OGhg9s8GJVaLkIBaMr3CTs1TDHH/O1wKVHn2+8Jt43LsoSqgzu5U2iJIl21RuNs1rRP0UzVNVuLVv7pvfuH5E1yhCSq+Ri6yonX4nU5GxZnHB1ihH6XH9eaI7wDFQlesKDfsNHFL+EALBF+SA1QwLgd3M+K61Bp/mNdJegsNSewqYvPn1D0b9EcitKx8QNo4fASG1FHEajbT6Gw=="}],"wiki_items":[{"catalog_id":"71313e4f-dcd4-4593-b5c3-1ffdf54517f3","title":"Technology Stack \u0026 Dependencies","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"b29a1a46-d70e-4298-8f73-013bc46e6244","gmt_create":"2025-10-04T20:00:50.3864133+05:30","gmt_modified":"2025-10-04T20:00:50.3910424+05:30"},{"catalog_id":"d9182c30-a943-423d-8f4b-4d25dccd90fb","title":"System Architecture","description":"system-architecture","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"5f5fc573-12a0-4f32-95a9-0601f24add60","gmt_create":"2025-10-04T20:01:01.6434559+05:30","gmt_modified":"2025-10-04T20:01:01.6481273+05:30"},{"catalog_id":"57b7ffbb-6728-46cd-b34d-055415ec32e9","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"2fc35a89-a7b0-4886-91eb-553cceb5cc0a","gmt_create":"2025-10-04T20:01:01.8449531+05:30","gmt_modified":"2025-10-04T20:01:01.849411+05:30"},{"catalog_id":"aeec3718-6786-4d99-95ff-9e4fe0675184","title":"Vector Database \u0026 Indexing","description":"vector-database-indexing","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"8270ecb4-3dfd-4620-96e0-03f8458d7352","gmt_create":"2025-10-04T20:01:47.996745+05:30","gmt_modified":"2025-10-04T20:01:48.0009396+05:30"},{"catalog_id":"2108ff88-06bb-4cb0-bd8b-18bd6316a41e","title":"Data Processing Module","description":"data-processing","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"79a020c6-b08b-4df5-97e8-9864c7b40bf5","gmt_create":"2025-10-04T20:01:51.3182003+05:30","gmt_modified":"2025-10-04T20:01:51.3222897+05:30"},{"catalog_id":"4fc71009-251d-4bab-87c1-e39f9428732c","title":"Data Acquisition Module","description":"data-acquisition","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"5cb294b8-69c3-4ec7-b9ad-a5cf66d42aa7","gmt_create":"2025-10-04T20:01:53.7866819+05:30","gmt_modified":"2025-10-04T20:01:53.7908706+05:30"},{"catalog_id":"f30d9ec1-0bbe-4efd-a526-a574d115b129","title":"RAG Core Engine","description":"rag-core-engine","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"6a6d622c-7906-463b-9e1d-94e266f01988","gmt_create":"2025-10-04T20:02:43.0472286+05:30","gmt_modified":"2025-10-04T20:02:43.1747778+05:30"},{"catalog_id":"16697a47-25fc-4c4f-ae2e-7a9ef5ce6d6c","title":"Retrieval System","description":"retrieval-system","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"e05df4b7-5c34-4e1d-b2d2-3c33be870c7c","gmt_create":"2025-10-04T20:02:47.9505435+05:30","gmt_modified":"2025-10-04T20:02:47.955686+05:30"},{"catalog_id":"12e1f545-ba8b-4b22-9c7f-5bf42d190fea","title":"Material Estimation Engine","description":"material-estimation-engine","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"a1095372-811e-4c1a-9f20-a9ff6f5070f2","gmt_create":"2025-10-04T20:02:51.6171106+05:30","gmt_modified":"2025-10-04T20:02:51.6212265+05:30"},{"catalog_id":"05acbb95-0bfe-4d89-9400-e4e0dddcb6f0","title":"Usage Examples","description":"usage-examples","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"dff8afbb-4ca4-47ba-8482-7be33a7bfc1f","gmt_create":"2025-10-04T20:03:34.4445108+05:30","gmt_modified":"2025-10-04T20:03:34.4491727+05:30"},{"catalog_id":"31638861-9219-480a-9d53-94cc2d1005d0","title":"Web Interface","description":"web-interface","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"988432fb-a9cb-49d9-a41c-5071ab5466fa","gmt_create":"2025-10-04T20:03:49.1671729+05:30","gmt_modified":"2025-10-04T20:03:49.1718223+05:30"},{"catalog_id":"a1e6e695-19b6-4a47-8cb6-3429b70d7130","title":"Configuration \u0026 Setup","description":"configuration-setup","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"fa12dd7b-9560-44b1-a274-f87713d619b4","gmt_create":"2025-10-04T20:03:52.7709965+05:30","gmt_modified":"2025-10-04T20:03:52.7756349+05:30"},{"catalog_id":"92588865-644a-433a-8f2c-a3d6c5a68a94","title":"Troubleshooting Guide","description":"troubleshooting-guide","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"89ea51b7-1ad2-479a-ba8d-b081a25bf70f","gmt_create":"2025-10-04T20:04:22.2545409+05:30","gmt_modified":"2025-10-04T20:04:22.258132+05:30"},{"catalog_id":"d62f4541-7767-4e23-9a9f-98a1a144c13d","title":"Link Scraping","description":"link-scraping","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"6c61b5f6-46d9-46fb-8288-8829b0288d9d","gmt_create":"2025-10-04T20:04:41.2009489+05:30","gmt_modified":"2025-10-04T20:04:41.2056037+05:30"},{"catalog_id":"63a3698a-aa85-4140-b9ac-59c9ea3b89ff","title":"Data Flow","description":"data-flow","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"7a252a29-1868-43ac-be15-dc8a5ad257fb","gmt_create":"2025-10-04T20:04:53.9596933+05:30","gmt_modified":"2025-10-04T20:04:53.9647863+05:30"},{"catalog_id":"6ba61f72-2e5a-4411-82fa-6dadaa88e00d","title":"Embedding Generation","description":"embedding-generation","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"fcf6a2a9-2437-4103-82ce-4022eeb64e42","gmt_create":"2025-10-04T20:05:13.0390194+05:30","gmt_modified":"2025-10-04T20:05:13.0431155+05:30"},{"catalog_id":"169b32e4-0cca-40ae-953c-498c587d0f62","title":"Query Processing","description":"query-processing","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"cb951a8c-34f9-420f-8fd1-7bb49a2f08af","gmt_create":"2025-10-04T20:05:27.4430078+05:30","gmt_modified":"2025-10-04T20:05:27.4471739+05:30"},{"catalog_id":"170d58dc-c99e-4ac1-9ce3-4c9d6259f675","title":"Component Interactions","description":"component-interactions","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"d9bc64c6-2224-4a91-b6c6-91944fca1404","gmt_create":"2025-10-04T20:06:05.6777234+05:30","gmt_modified":"2025-10-04T20:06:05.6818252+05:30"},{"catalog_id":"233d1d4a-666c-4450-9f0a-8856e5778dd0","title":"Details Scraping","description":"details-scraping","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"63aa4dbf-6d27-4107-ab3e-c1d86b45284f","gmt_create":"2025-10-04T20:06:19.8241774+05:30","gmt_modified":"2025-10-04T20:06:19.8282865+05:30"},{"catalog_id":"12e16eeb-2094-42b4-9c4a-aea5465f954b","title":"ChromaDB Integration","description":"chromadb-integration","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"322bbf76-3048-4287-8d8f-98648031dd57","gmt_create":"2025-10-04T20:06:28.9412869+05:30","gmt_modified":"2025-10-04T20:06:28.9459193+05:30"},{"catalog_id":"313c6b55-53a6-453a-b213-9b4d170d3af5","title":"Context Extraction","description":"context-extraction","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"f49f644f-bbc5-4fbe-a889-2cb41b2ff043","gmt_create":"2025-10-04T20:07:08.3238769+05:30","gmt_modified":"2025-10-04T20:07:08.3285418+05:30"},{"catalog_id":"b1813d96-79f8-4bb4-a945-913004ac902e","title":"FAISS Implementation","description":"faiss-implementation","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"a7a6622c-ed11-456f-93be-7b4b98e56c43","gmt_create":"2025-10-04T20:07:19.926557+05:30","gmt_modified":"2025-10-04T20:07:19.9306376+05:30"},{"catalog_id":"b1c684ab-abd5-4b9e-8c17-7a151c8b16f7","title":"Integration Patterns","description":"integration-patterns","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"a3a675f0-b63d-4ccc-85ee-8d64170ef868","gmt_create":"2025-10-04T20:07:30.5229606+05:30","gmt_modified":"2025-10-04T20:07:30.5276929+05:30"},{"catalog_id":"f5c701a7-3fa5-4ad0-b53c-06ab96138f9a","title":"Response Generation","description":"response-generation","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"ead4226d-d5e3-4b8b-8787-f124d4994ad4","gmt_create":"2025-10-04T20:08:03.7971889+05:30","gmt_modified":"2025-10-04T20:08:03.8018109+05:30"},{"catalog_id":"7da6c97c-c029-4033-9082-89768f53c4a6","title":"Material Estimation Engine","description":"material-estimation","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"423538ad-29aa-4e00-a9fd-8331eddf8f0e","gmt_create":"2025-10-04T20:08:15.3126037+05:30","gmt_modified":"2025-10-04T20:08:15.3167178+05:30"},{"catalog_id":"332ab947-24ad-4740-948b-f18647950c80","title":"Dynamic Filtering Mechanism","description":"filtering-mechanism","extend":"{}","progress_status":"completed","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6","id":"a572f9af-265e-466b-9031-049b9ee313ab","gmt_create":"2025-10-04T20:08:26.1426326+05:30","gmt_modified":"2025-10-04T20:08:26.1463061+05:30"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: vendor-rag-model\n\n## 1. Project Introduction\n\n### Purpose Statement\nThe vendor-rag-model project is a Retrieval-Augmented Generation (RAG) system designed to assist with vendor and product procurement for construction projects. It scrapes vendor data from IndiaMART, processes it using AI models, and provides intelligent responses to procurement queries.\n\n### Core Goals and Objectives\n- Extract and structure vendor information from IndiaMART\n- Build a searchable knowledge base of construction materials and suppliers\n- Provide intelligent responses to procurement queries with material estimation capabilities\n- Support project-specific requirements with automated material calculations\n\n### Target Audience\n- Construction project managers\n- Procurement officers\n- Facility planners\n- Engineering teams responsible for infrastructure projects\n\n## 2. Technical Architecture\n\n### Component Breakdown\nThe system follows a multi-layer architecture with distinct components for data acquisition, processing, storage, and retrieval:\n\n```mermaid\nflowchart TD\n    A[Data Scraping] --\u003e B[Data Processing]\n    B --\u003e C[Vector Database]\n    C --\u003e D[RAG System]\n    D --\u003e E[User Interface]\n    F[Query Processing] --\u003e D\n    G[Material Estimation] --\u003e D\n```\n\n### Design Patterns\nThe project implements several key design patterns:\n- **Pipeline Pattern**: Data flows through scraping, processing, and indexing stages\n- **Singleton Pattern**: The RAG system maintains a single instance of the FAISS index\n- **Strategy Pattern**: Different filtering strategies based on query content\n- **Factory Pattern**: Dynamic response generation based on query type\n\n### System Relationships\n```mermaid\ngraph TD\n    link-scrap.py --\u003e details.py\n    details.py --\u003e all_products.json\n    ingest.py --\u003e chromadb\n    retriever.py --\u003e chromadb\n    rag.py --\u003e retriever.py\n    seek/app.py --\u003e rag.py\n    seek/rag.py --\u003e ollama\n```\n\n### Data Flow\n```mermaid\nflowchart TD\n    A[Scraping Links] --\u003e B[Product Details Scraping]\n    B --\u003e C[JSON Data Files]\n    C --\u003e D[Data Ingestion]\n    D --\u003e E[Vector Database]\n    E --\u003e F[Query Processing]\n    F --\u003e G[Response Generation]\n    G --\u003e H[User Interface]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- `seek/app.py`: Streamlit web interface for project prediction\n- `seek/rag.py`: Core RAG system implementation\n- `link-scrap.py`: Initial link scraping from IndiaMART\n- `details.py`: Product details scraping and data extraction\n\n### Core Modules\n- **Scraping Module**: Extracts vendor data from IndiaMART (link-scrap.py, details.py)\n- **Ingestion Module**: Processes and indexes data (ingest.py)\n- **Retrieval Module**: Searches indexed data (retriever.py)\n- **RAG Module**: Generates intelligent responses (seek/rag.py)\n\n### Configuration Approach\nThe project uses implicit configuration through hardcoded paths and model specifications. Key configuration elements are embedded within the code rather than external configuration files.\n\nSources:\n- [ingest.py](vendor-rag-model/ingest.py#L1-L95)\n- [seek/rag.py](vendor-rag-model/seek/rag.py#L0-L434)\n\n### External Dependencies\nThe project relies on numerous external libraries for AI/ML, web scraping, and data processing:\n\n```mermaid\ngraph TD\n    A[AI/ML Libraries] --\u003e B[langchain]\n    A --\u003e C[sentence-transformers]\n    A --\u003e D[faiss-cpu]\n    A --\u003e E[ollama]\n    A --\u003e F[chromadb]\n    G[Web Scraping] --\u003e H[selenium]\n    G --\u003e I[beautifulsoup4]\n    H[Data Processing] --\u003e I[pandas]\n    H --\u003e J[numpy]\n    I[Web Framework] --\u003e J[streamlit]\n    I --\u003e K[flask]\n```\n\nSources:\n- [requirements.txt](vendor-rag-model/requirements.txt#L0-L167)\n\n### Integration Points\n- **IndiaMART Website**: Primary data source through web scraping\n- **Ollama**: LLM integration for response generation\n- **ChromaDB**: Vector database for document storage and retrieval\n- **FAISS**: Alternative vector indexing implementation\n- **Streamlit**: Web interface for user interaction\n\n### Component Relationships\n```mermaid\ngraph LR\n    Scraping[Web Scraping] --\u003e|Raw Data| Processing[Data Processing]\n    Processing --\u003e|Structured JSON| Ingestion[Data Ingestion]\n    Ingestion --\u003e|Vector Embeddings| Database[Vector Database]\n    Database --\u003e|Retrieved Context| RAG[RAG System]\n    Query[User Query] --\u003e RAG\n    RAG --\u003e|Generated Response| UI[User Interface]\n    Requirements[Project Requirements] --\u003e|Extracted| Estimation[Material Estimation]\n    Estimation --\u003e|Estimated Materials| RAG\n```\n\n## 4. Key Features\n\n### Functionality Overview\nThe system provides several key features for construction procurement:\n- Vendor and product information retrieval\n- Intelligent query processing with context awareness\n- Project requirement extraction from natural language\n- Automated material estimation based on project specifications\n- Filtering by vendor ratings, location, and certifications\n\n### Implementation Highlights\n- **Dynamic Requirement Extraction**: Parses project specifications from natural language queries\n- **Material Estimation Engine**: Calculates material requirements based on project parameters\n- **Multi-stage Filtering**: Applies business rules to filter vendor results\n- **Contextual Response Generation**: Uses LLM to generate comprehensive responses\n\nSources:\n- [seek/rag.py](vendor-rag-model/seek/rag.py#L200-L350)\n\n### Feature Architecture\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e RequirementExtraction: User Query\n    RequirementExtraction --\u003e MaterialEstimation: Project Specs Found\n    RequirementExtraction --\u003e InformationRetrieval: General Query\n    MaterialEstimation --\u003e InformationRetrieval: Combine with Context\n    InformationRetrieval --\u003e Filtering: Raw Results\n    Filtering --\u003e ResponseGeneration: Filtered Results\n    ResponseGeneration --\u003e Idle: Return Response\n```\n\n### Data Model\n```mermaid\nerDiagram\n    PRODUCT ||--o{ VENDOR : supplies\n    PRODUCT ||--o{ CATEGORY : belongs_to\n    VENDOR ||--o{ LOCATION : located_in\n    PROJECT ||--o{ MATERIAL_ESTIMATE : requires\n    MATERIAL_ESTIMATE ||--|| PRODUCT : based_on\n    QUERY ||--o{ REQUIREMENT : extracts\n    REQUIREMENT ||--o{ MATERIAL_ESTIMATE : drives\n```\n\u003c/blog\u003e","gmt_create":"2025-10-04T19:57:38.6759204+05:30","gmt_modified":"2025-10-04T19:57:38.6759204+05:30","id":"69eb1dbc-594f-4d4f-8554-2fc00da06821","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-04T19:56:11.5253019+05:30","gmt_modified":"2025-10-04T19:56:11.5253019+05:30","id":"46334af5-d34a-4f63-b321-23e89ce84152","repo_id":"735eb33b-d074-4e0c-9130-eb185b3390a6"},"wiki_repo":{"id":"735eb33b-d074-4e0c-9130-eb185b3390a6","name":"vendor-rag-model","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── json\\n│   ├── LV_panel_links.json\\n│   ├── Structured_Cabling_links.json\\n│   ├── aac_blocks_links.json\\n│   ├── acoustic_partition_links.json\\n│   ├── aggregate_links.json\\n│   ├── all_products.json\\n│   ├── busduct_cabletrays_links.json\\n│   ├── cable_links.json\\n│   ├── cctv_links.json\\n│   ├── cement.json\\n│   ├── cement_links.json\\n│   ├── chilled_waterpump_links.json\\n│   ├── chillers_links.json\\n│   ├── clean_agent_links.json\\n│   ├── concrete_links.json\\n│   ├── cooling_tower_links.json\\n│   ├── diesel_generator_links.json\\n│   ├── drainage_piping_links.json\\n│   ├── ducting_links.json\\n│   ├── earthing_links.json\\n│   ├── false_ceiling_links.json\\n│   ├── fire_detection_links.json\\n│   ├── fire_pump_links.json\\n│   ├── fire_rated_doors_links.json\\n│   ├── grout_links.json\\n│   ├── ht_switch_gear_links.json\\n│   ├── hydrant_links.json\\n│   ├── insulation_links.json\\n│   ├── power_transformer_links.json\\n│   ├── pumps_links.json\\n│   ├── raised_flooring_links.json\\n│   ├── sand_links.json\\n│   ├── sanitary_fixtures_links.json\\n│   ├── server_racks_links.json\\n│   ├── sprinkler_links.json\\n│   ├── tiles_links.json\\n│   ├── ups_batter_links.json\\n│   ├── valves_fittings_links.json\\n│   ├── water_storage_links.json\\n│   ├── water_supply_piping_links.json\\n│   ├── waterpump_links.json\\n│   └── windows_links.json\\n├── seek\\n│   ├── app.py\\n│   └── rag.py\\n├── README.md\\n├── all_products.json\\n├── details.py\\n├── ingest.py\\n├── link-scrap.py\\n├── page_source.html\\n├── paper.py\\n├── rag.py\\n├── requirements.txt\\n├── retriever.py\\n├── scraper_log.txt\\n└── scraping_progress.json\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"0e4ba0a1976cca70d7aa0fcbccab39740553084f","last_commit_update":"2025-10-04T19:30:01+05:30","gmt_create":"2025-10-04T19:56:11.0192663+05:30","gmt_modified":"2025-10-04T20:08:26.1814275+05:30","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}